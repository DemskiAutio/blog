<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ヴェルフェゴールのため息</title>
  
  <subtitle>怠惰なPG見習いのため息で綴られるメモのようなモノ</subtitle>
  <link href="https://demskiautio.github.io/demski/atom.xml" rel="self"/>
  
  <link href="https://demskiautio.github.io/demski/"/>
  <updated>2022-10-03T01:56:24.084Z</updated>
  <id>https://demskiautio.github.io/demski/</id>
  
  <author>
    <name>Demski Autio</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS on vagrant -LAMP編</title>
    <link href="https://demskiautio.github.io/demski/2021/12/07/CentOS7OnVagrant_LAMP/"/>
    <id>https://demskiautio.github.io/demski/2021/12/07/CentOS7OnVagrant_LAMP/</id>
    <published>2021-12-07T10:31:48.000Z</published>
    <updated>2022-10-03T01:56:24.084Z</updated>
    
    <content type="html"><![CDATA[<h1 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h1><p>前回の記事『CentOS7 on vagrant』の続き。<br><br>今回は，CentOS7上にWebサーバー環境の基本となるLAMP環境を整える。</p><span id="more"></span><h1 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h1><ul><li>OS:Windows10Pro64bit</li><li>CPU:AMD A10-7850</li><li>メモリ 16.0GB デュアル-Channel DDR3</li><li>マザーボードASRock FM2A88X+ Killer</li></ul><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul><li>Vagrantを使ってVirtualBox上にCentOS7をインストールしてること。</li></ul><!-- toc --><h1 id="ミドルウェアをインストール"><a href="#ミドルウェアをインストール" class="headerlink" title="ミドルウェアをインストール"></a>ミドルウェアをインストール</h1><p>ここからPHPやMySQL等のミドルウェアをインストール・設定していく。</p><h2 id="PHP5-6の場合"><a href="#PHP5-6の場合" class="headerlink" title="PHP5.6の場合"></a>PHP5.6の場合</h2><p>現在，インストールされているか，されているならバージョンはいくつかを以下のコマンドで確認</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep php</span><br></pre></td></tr></table></figure><p>入っていたらバージョンが、入っていないなら何も表示されない。</p><p>インストールには，基本的に下記を実行すると良い。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#sudo</span> yum install php</span><br><span class="line"><span class="variable">$#</span> sudo yum install httpd</span><br></pre></td></tr></table></figure><p>但し、これだと古いバージョンが入るので，EPELやRemi’s RPM等のリポジトリからインストールする。</p><p>PHPのバージョンはVer5.6が最新普及版だと思うので，このバージョンを選択。<br><br>次のバージョンであるVer7は，普及にはもう少しかかりそう。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span> yum install -y --enablerepo=remi,remi-php56 php</span><br></pre></td></tr></table></figure><p>次に，いろいろパッケージやプラグイン類をインストールしていく。<br><br>何がどんな機能を提供しているのか，いまひとつ分ってないので取りあえず適当にインストール。</p><h3 id="必要なものインストール１"><a href="#必要なものインストール１" class="headerlink" title="必要なものインストール１"></a>必要なものインストール１</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span> yum install vim bash-completion wget curl lsof -y</span><br><span class="line"><span class="variable">$#</span> yum install ansible docker-io -y</span><br><span class="line"><span class="variable">$#</span> yum install yum-utils deltarpm -y</span><br></pre></td></tr></table></figure><h3 id="必要なものインストール２"><a href="#必要なものインストール２" class="headerlink" title="必要なものインストール２"></a>必要なものインストール２</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span> yum install -y --enablerepo=epel,remi libmcrypt-devel libaio libaio-devel libmcrypt libtidy openssl-devel perl-DBI</span><br></pre></td></tr></table></figure><h3 id="PHPのプラグインインストール"><a href="#PHPのプラグインインストール" class="headerlink" title="PHPのプラグインインストール"></a>PHPのプラグインインストール</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span> yum install -y --enablerepo=remi,remi-php56 php-intl php-soap php-mcrypt php-mbstring php-gd php-devel php-odbc php-xml php-xmlrpc httpd-devel pcre-devel icu libicu-devel php-mysql php-mysqlnd php-pdo php-pear php-tidy</span><br></pre></td></tr></table></figure><p>※a-blogインストールでの躓きぽイント</p><h3 id="画像操作系インストール"><a href="#画像操作系インストール" class="headerlink" title="画像操作系インストール"></a>画像操作系インストール</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span> yum install  -y --enablerepo=epel,remi,remi-php56 ImageMagick</span><br><span class="line"><span class="variable">$#</span> yum install -y --enablerepo=epel,remi,remi-php56 php-pecl-imagick</span><br></pre></td></tr></table></figure><h3 id="opcacheのインストール"><a href="#opcacheのインストール" class="headerlink" title="opcacheのインストール"></a>opcacheのインストール</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span> yum -y --enablerepo=epel,remi,remi-php56 install php-opcache.x86_64</span><br><span class="line"><span class="variable">$#</span> yum -y --enablerepo=remi,remi-php56 install php-pecl-apcu php-pecl-mongo php-pecl-memcache php-pecl-memcached</span><br></pre></td></tr></table></figure><h3 id="php-iniの設定"><a href="#php-iniの設定" class="headerlink" title="php.iniの設定"></a>php.iniの設定</h3><p>php.iniは，PHPの設定ファイル。<br>これを正しく設定しないと，Webサーバーがうまく動かなかったりする。<br>CentOS7のphp.iniファイルは以下のパスにある。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#vi</span> /etc/php.ini</span><br></pre></td></tr></table></figure><p>「vi」コマンドでエディタを起動してファイルを開き編集していく。<br>量が膨大なので設定箇所だけ以下に示す。<br>設定箇所はvimなら「&#x2F;」で検索しながらがおすすめ。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//timezoneの設定</span><br><span class="line">date.timezone = <span class="string">&quot;Asia/Tokyo&quot;</span></span><br><span class="line"></span><br><span class="line">//Dynamic Extensionsに追記</span><br><span class="line">extension=php_mbstring.dll</span><br><span class="line"></span><br><span class="line">//コメントアウトを外して設定</span><br><span class="line">[mbstring]</span><br><span class="line">mbstring.language = Japanese</span><br><span class="line">mbstring.internal_encoding = UTF-8</span><br><span class="line">mbstring.http_input = pass</span><br><span class="line">mbstring.http_output = pass</span><br><span class="line">mbstring.encoding_translation = Off</span><br><span class="line">mbstring.detect_order = UTF-8,SJIS,EUC-JP,JIS,ASCII</span><br><span class="line">mbstring.substitute_character = none</span><br><span class="line">mbstring.func_overload = 0</span><br><span class="line">mbstring.strict_detection = Off</span><br><span class="line">;mbstring.http_output_conv_mimetype=</span><br></pre></td></tr></table></figure><h2 id="MarinaDB"><a href="#MarinaDB" class="headerlink" title="MarinaDB"></a>MarinaDB</h2><p>続いて，データベースである「MarinaDB」をインストール。<br>通常は「MySQL」が使われるが，後継ソフトである「MarinaDB」が今後普及しそうなので，こちらを選択。  </p><h3 id="既存のSqlを削除"><a href="#既存のSqlを削除" class="headerlink" title="既存のSqlを削除"></a>既存のSqlを削除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum remove -y mariadb mariadb-libs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rpm -qa | grep -i &quot;mariadb&quot;</span></span><br><span class="line">//※何も表示されなかったら OK</span><br><span class="line"></span><br><span class="line">//他にMySql関係が入ってないか確認</span><br><span class="line"><span class="comment"># rpm -qa mysql*</span></span><br><span class="line">//ディレクトリ削除</span><br><span class="line"><span class="comment"># rm -rf /var/lib/mysql</span></span><br></pre></td></tr></table></figure><h3 id="下ごしらえ"><a href="#下ごしらえ" class="headerlink" title="下ごしらえ"></a>下ごしらえ</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//GPG-KEYをインストール</span><br><span class="line">rpm --import https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</span><br></pre></td></tr></table></figure><p>公式からリポジトリ設定を取得。<br>Vimでファイルを作成<br><a href="http://downloads.mariadb.org/mariadb/repositories/">http://downloads.mariadb.org/mariadb/repositories/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//リポジトリの設定変更</span><br><span class="line"><span class="comment"># vi /etc/yum.repos.d/mariadb.repo</span></span><br><span class="line"><span class="comment"># MariaDB 10.1 CentOS repository list - created 2016-09-30 03:37 UTC</span></span><br><span class="line"><span class="comment"># http://downloads.mariadb.org/mariadb/repositories/</span></span><br><span class="line"></span><br><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line">baseurl = http://yum.mariadb.org/10.1/centos7-amd64</span><br><span class="line">gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure><h3 id="インストール"><a href="#インストール" class="headerlink" title="インストール"></a>インストール</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install --enablerepo=mariadb MariaDB-common MariaDB-devel MariaDB-shared MariaDB-compat MariaDB-server MariaDB-client</span><br></pre></td></tr></table></figure><h3 id="設定ファイルをコピー"><a href="#設定ファイルをコピー" class="headerlink" title="設定ファイルをコピー"></a>設定ファイルをコピー</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># cp -p /usr/share/mysql/my-small.cnf /etc/my.cnf.d/server.cnf</span></span><br></pre></td></tr></table></figure><h3 id="文字コード設定"><a href="#文字コード設定" class="headerlink" title="文字コード設定"></a>文字コード設定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf.d/server.cnf</span><br><span class="line">[client]</span><br><span class="line">default-character-set = utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server = utf8</span><br></pre></td></tr></table></figure><h3 id="MariaDB-サービス登録・起動"><a href="#MariaDB-サービス登録・起動" class="headerlink" title="MariaDB サービス登録・起動"></a>MariaDB サービス登録・起動</h3><p>CentOS7でMarinaDBを起動しサービスに登録する。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span> systemctl start mysql.service</span><br><span class="line"><span class="variable">$#</span> systemctl <span class="built_in">enable</span> mysql.service</span><br></pre></td></tr></table></figure><h2 id="PHP・MySql-MarinaDB-インストール後に必要になるかもしれない作業"><a href="#PHP・MySql-MarinaDB-インストール後に必要になるかもしれない作業" class="headerlink" title="PHP・MySql(MarinaDB)インストール後に必要になるかもしれない作業"></a>PHP・MySql(MarinaDB)インストール後に必要になるかもしれない作業</h2><h3 id="ファイヤーウォールの無効化"><a href="#ファイヤーウォールの無効化" class="headerlink" title="ファイヤーウォールの無効化"></a>ファイヤーウォールの無効化</h3><p>CentOS7では，デフォルトでファイヤーウォールが起動しており，外部からの通信を遮断したりしてるので，無効化する。<br>実環境で使うときは設定するなり，サードパティ入れるなりしたいといけないと思う。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//ファイアウォール停止</span><br><span class="line"><span class="variable">$#</span> systemctl stop firewalld</span><br><span class="line">//ファイアウォール自動起動解除</span><br><span class="line"><span class="variable">$#</span> systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><h3 id="SELinuxの無効化"><a href="#SELinuxの無効化" class="headerlink" title="SELinuxの無効化"></a>SELinuxの無効化</h3><p>SELinuxはファイヤーウォールとは別の，ホワイトリスト式のセキュリティソフトらしい。<br>開発中は，プログラムが動かなくなったり，細かく設定するのも面倒なので，無効化してしまう。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//SELinux状態確認</span><br><span class="line"><span class="variable">$#</span> getenforce</span><br><span class="line">//SELinux有効時の表示</span><br><span class="line">Enforcing</span><br><span class="line">//SELinux無効化</span><br><span class="line"><span class="variable">$#</span> setenforce 0</span><br><span class="line">//SELinux状態確認</span><br><span class="line"><span class="variable">$#</span> getenforce</span><br><span class="line">//SELinux無効時の表示</span><br><span class="line">Permissive</span><br><span class="line"></span><br><span class="line">//SELinux設定ファイル編集</span><br><span class="line"><span class="variable">$#</span> vi /etc/sysconfig/selinux</span><br><span class="line">SELINUX=enforcing</span><br><span class="line">↓</span><br><span class="line">SELINUX=disabled　←　システム起動時にSELinuxを無効化</span><br></pre></td></tr></table></figure><h3 id="システムの起動と自動化"><a href="#システムの起動と自動化" class="headerlink" title="システムの起動と自動化"></a>システムの起動と自動化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span> systemctl start システム名.service //起動</span><br><span class="line"><span class="variable">$#</span> systemctl <span class="built_in">enable</span> システム名.service //自動起動登録</span><br><span class="line"><span class="variable">$#</span> systemctl restart システム名.service //リスタート</span><br><span class="line"><span class="variable">$#</span> systemctl status システム名.service //状態確認</span><br><span class="line"><span class="variable">$#</span> systemctl stop システム名.service //停止</span><br></pre></td></tr></table></figure><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>VegrantでVM上にCeentOS7＋LAMP環境を作成した。<br>これで，心置きなくWebサーバー環境が必要な開発も進められる。<br>さぁ，バリバリプログラミンするぞ～（←プロナマちゃん風に）</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h1&gt;&lt;p&gt;前回の記事『CentOS7 on vagrant』の続き。&lt;br&gt;&lt;br&gt;今回は，CentOS7上にWebサーバー環境の基本となるLAMP環境を整える。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Vagrant" scheme="https://demskiautio.github.io/demski/tags/Vagrant/"/>
    
    <category term="CentOS7" scheme="https://demskiautio.github.io/demski/tags/CentOS7/"/>
    
    <category term="仮想環境" scheme="https://demskiautio.github.io/demski/tags/%E4%BB%AE%E6%83%B3%E7%92%B0%E5%A2%83/"/>
    
    <category term="web" scheme="https://demskiautio.github.io/demski/tags/web/"/>
    
    <category term="LAMP" scheme="https://demskiautio.github.io/demski/tags/LAMP/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 on vagrant</title>
    <link href="https://demskiautio.github.io/demski/2021/11/06/CentOS7OnVagrant/"/>
    <id>https://demskiautio.github.io/demski/2021/11/06/CentOS7OnVagrant/</id>
    <published>2021-11-06T11:26:36.000Z</published>
    <updated>2022-10-03T01:56:30.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>『Vagrant』を使って『Oracle VM Virtualbox』にCentOS7をインストールして，LAMP環境やMEAN環境を作成したので，その時のメモ。<br>仮想環境は，何度でも作っては壊して出来るから非常に役に立ってます。  </p><span id="more"></span><!-- toc --><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><ul><li>OS:Windows10Pro64bit</li><li>CPU:AMD A10-7850</li><li>メモリ 16.0GB デュアル-Channel DDR3</li><li>マザーボードASRock FM2A88X+ Killer</li></ul><h2 id="インストール"><a href="#インストール" class="headerlink" title="インストール"></a>インストール</h2><p>VirtualBox-Downloads→Vagrant-Downloadsの順にインストール。<br>VagrantがVirtualBoxに依存するため。</p><h2 id="BOXの追加から初期化"><a href="#BOXの追加から初期化" class="headerlink" title="BOXの追加から初期化"></a>BOXの追加から初期化</h2><p>VagrantdCloudからBOXを持ってくる。<br><a href="https://atlas.hashicorp.com/boxes/search?utm_source=vagrantcloud.com&amp;vagrantcloud=1">https://atlas.hashicorp.com/boxes/search?utm_source=vagrantcloud.com&amp;vagrantcloud=1</a><br>もしくは，こちらからダウンロード。<br><a href="http://www.vagrantbox.es/">http://www.vagrantbox.es/</a></p><h3 id="CentOS7の場合"><a href="#CentOS7の場合" class="headerlink" title="CentOS7の場合"></a>CentOS7の場合</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vagrant init centos/7</span><br><span class="line">vagrant up --provider virtualbox</span><br></pre></td></tr></table></figure><p>boxがない場合，ダウンロードしてくれる。<br>「１」でボックスのダウンロードと初期化（vagrantファイルの生成）を一気に行っている。<br>「２」では仮想マシンソフトを「virtualbox」であることを示すオプション「–provider」をつけて，仮想マシンを立ち上げている。</p><p>一気にやってうまくいかないときは以下の通り</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vagrant box add box名 URL</span><br><span class="line">vagrant init box名</span><br><span class="line">vagrant up</span><br></pre></td></tr></table></figure><h2 id="仮想マシンの編集"><a href="#仮想マシンの編集" class="headerlink" title="仮想マシンの編集"></a>仮想マシンの編集</h2><p>カレントディレクトリのvagrantファイルを編集</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//ファイルの共有フォルダ設定</span><br><span class="line"> config.vm.synced_folder <span class="string">&quot;../data&quot;</span>, <span class="string">&quot;/vagrant_data&quot;</span></span><br><span class="line"></span><br><span class="line">//VirtualサーバーのIPアドレス設定</span><br><span class="line">config.vm.network <span class="string">&quot;private_network&quot;</span>, ip: <span class="string">&quot;192.168.33.10&quot;</span></span><br><span class="line"></span><br><span class="line">//VirtualBoxのGUIモードの設定をONにする</span><br><span class="line">config.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="keyword">do</span> |vb|</span><br><span class="line">  <span class="comment">#   # Display the VirtualBox GUI when booting the machine</span></span><br><span class="line">     vb.gui = <span class="literal">true</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   # Customize the amount of memory on the VM:</span></span><br><span class="line">  <span class="comment">#   vb.memory = &quot;1024&quot;</span></span><br><span class="line">   end</span><br></pre></td></tr></table></figure><p>何故か，CUIのままだと立ち上がらない。(バグ？）</p><h2 id="仮想マシン立ち上げ"><a href="#仮想マシン立ち上げ" class="headerlink" title="仮想マシン立ち上げ"></a>仮想マシン立ち上げ</h2><p>コマンドプロンプトで</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure><p>とすると，仮想マシンが立ち上がる。<br>次に，新たにターミナルを起動してCentOS7にログインする。<br>デフォルトだとユーザーもパスワードも「vagrant」となる。<br>続いて「CentOS7」の環境を整えていく。</p><h2 id="CentOS7環境の整備"><a href="#CentOS7環境の整備" class="headerlink" title="CentOS7環境の整備"></a>CentOS7環境の整備</h2><p>CentOS7の管理権限にアップする「su」コマンド実行後に行うと便利。  </p><h3 id="レポジトリ追加"><a href="#レポジトリ追加" class="headerlink" title="レポジトリ追加"></a>レポジトリ追加</h3><p>参考:<a href="http://qiita.com/bezeklik/items/9766003c19f9664602fe#remis-rpm-repository">http://qiita.com/bezeklik/items/9766003c19f9664602fe#remis-rpm-repository</a></p><h5 id="EPEL"><a href="#EPEL" class="headerlink" title="EPEL"></a>EPEL</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release    <span class="comment">#### EPEL インストール</span></span><br><span class="line">rpm -qa | grep epel            <span class="comment">#### EPEL インストール確認</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -p /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.org    <span class="comment">#### バックアップ</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/yum.repos.d/epel.repo | grep <span class="string">&#x27;enabled&#x27;</span>    <span class="comment">#### 設定確認 (置換前)</span></span><br><span class="line">sed -i <span class="string">&#x27;s/enabled=1/enabled=0/g&#x27;</span> /etc/yum.repos.d/epel.repo        <span class="comment">#### EPEL 無効化</span></span><br><span class="line"><span class="built_in">cat</span> /etc/yum.repos.d/epel.repo | grep <span class="string">&#x27;enabled&#x27;</span>    <span class="comment">#### 設定確認 (置換後)</span></span><br><span class="line"></span><br><span class="line">yum -y install &lt;パッケージ名&gt; --enablerepo=epel    <span class="comment">#### EPEL を使ったパッケージインストール</span></span><br><span class="line"></span><br><span class="line">yum -y update epel-release --enablerepo=epel       <span class="comment">#### EPLE リポジトリアップデート</span></span><br></pre></td></tr></table></figure><h4 id="Remi’s-RPM-repository"><a href="#Remi’s-RPM-repository" class="headerlink" title="Remi’s RPM repository"></a>Remi’s RPM repository</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install http://rpms.famillecollet.com/enterprise/remi-release-7.rpm  </span><br><span class="line">yum install yum-utils</span><br><span class="line">yum-config-manager --<span class="built_in">enable</span> remi-php70</span><br></pre></td></tr></table></figure><h3 id="キャッシュクリア"><a href="#キャッシュクリア" class="headerlink" title="キャッシュクリア"></a>キャッシュクリア</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><h3 id="yumのアップデート"><a href="#yumのアップデート" class="headerlink" title="yumのアップデート"></a>yumのアップデート</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y all</span><br></pre></td></tr></table></figure><h3 id="yum確認"><a href="#yum確認" class="headerlink" title="yum確認"></a>yum確認</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list all</span><br></pre></td></tr></table></figure><h3 id="CentOS7のyum自動アップデート"><a href="#CentOS7のyum自動アップデート" class="headerlink" title="CentOS7のyum自動アップデート"></a>CentOS7のyum自動アップデート</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install yum-cron.noarch</span><br></pre></td></tr></table></figure><p>vimで以下のファイルを編集。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/yum/yum-cron.conf</span><br><span class="line">apply_updates = no</span><br><span class="line">↓</span><br><span class="line">apply_updates = <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>デーモン起動，自動起動設定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start yum-cron</span><br><span class="line">systemctl <span class="built_in">enable</span> yum-cron</span><br></pre></td></tr></table></figure><h3 id="Developer-Tools-類をインストール"><a href="#Developer-Tools-類をインストール" class="headerlink" title="Developer Tools 類をインストール"></a>Developer Tools 類をインストール</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall <span class="string">&quot;Development tools&quot;</span></span><br><span class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel</span><br><span class="line">yum -y install gcc-c++</span><br></pre></td></tr></table></figure><p>ここまでで，CentOS7の基礎セットアップ完了。<br>ここから，色々展開できるので，稿を分けます</p><h2 id="展開リスト"><a href="#展開リスト" class="headerlink" title="展開リスト"></a>展開リスト</h2><ul><li>LAMP環境構築</li><li>node環境構築</li><li>Mean環境<br>       etc,,,</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;『Vagrant』を使って『Oracle VM Virtualbox』にCentOS7をインストールして，LAMP環境やMEAN環境を作成したので，その時のメモ。&lt;br&gt;仮想環境は，何度でも作っては壊して出来るから非常に役に立ってます。  &lt;/p&gt;</summary>
    
    
    
    
    <category term="Vagrant" scheme="https://demskiautio.github.io/demski/tags/Vagrant/"/>
    
    <category term="CentOS7" scheme="https://demskiautio.github.io/demski/tags/CentOS7/"/>
    
    <category term="仮想環境" scheme="https://demskiautio.github.io/demski/tags/%E4%BB%AE%E6%83%B3%E7%92%B0%E5%A2%83/"/>
    
    <category term="web" scheme="https://demskiautio.github.io/demski/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>hexoで使用中のpluginのメモ</title>
    <link href="https://demskiautio.github.io/demski/2021/03/18/HexoPlgin/"/>
    <id>https://demskiautio.github.io/demski/2021/03/18/HexoPlgin/</id>
    <published>2021-03-18T07:00:50.000Z</published>
    <updated>2019-05-05T06:55:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>hexoには様々な拡張機能がプラグインとして提供されている。<br>その中から，今自分が使っているモノのリストとその使い方をメモしておく。</p><span id="more"></span><!--toc--><h2 id="インストール一覧"><a href="#インストール一覧" class="headerlink" title="インストール一覧"></a>インストール一覧</h2><p>一覧というか，package.jsonを晒す。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3.8.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-algoliasearch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-autonofollow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-browsersync&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-clean-css&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-ftpsync&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-git&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-filter-flowchart&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-filter-sequence&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-fs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-feed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.2.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-seo-friendly-sitemap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.25&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-html-minifier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-i18n&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-imagemin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-notify&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-pagination&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-uglify&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-util&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.6.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;install&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.12.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jquery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jsdom&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^14.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;npm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.9.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prompt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uglify-js&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.5.4&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>“dependencies”に入っているのが，hexo関連。<br>以下に詳細を見ていく</p><h2 id="インストール詳細"><a href="#インストール詳細" class="headerlink" title="インストール詳細"></a>インストール詳細</h2><h3 id="コア関連"><a href="#コア関連" class="headerlink" title="コア関連"></a>コア関連</h3><p>取り合えず，何も考えずにぶち込んどけってやつ。</p><ul><li>hexo-generator-archive……「アーカイブの生成」</li></ul><figure class="highlight yml"><figcaption><span>hexo-generator-archive</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span> <span class="comment">#ページネーションの数</span></span><br><span class="line">  <span class="attr">yearly:</span> <span class="literal">true</span> <span class="comment">#年毎のアーカイブ生成</span></span><br><span class="line">  <span class="attr">monthly:</span> <span class="literal">true</span> <span class="comment">#月毎のアーカイブ生成</span></span><br><span class="line">  <span class="attr">daily:</span> <span class="literal">false</span> <span class="comment">#日毎のアーカイブ生成</span></span><br></pre></td></tr></table></figure><ul><li><p>hexo-generator-category……「カテゴリーページの生成」</p></li><li><p>hexo-generator-feed……「AtomまたはRSSのフィードを作成」</p></li><li><p>hexo-generator-index……「最初のindexページの生成」</p></li><li><p>hexo-toc……「ポストがレンダリングされる前に、マークダウンTOC（目次）を挿入します。」</p><figure class="highlight yml"><figcaption><span>hexo-generator-archive</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">maxdepth:</span> <span class="number">3</span> <span class="comment">#最大深度以下の見出しを使用する。</span></span><br><span class="line">  <span class="attr">class:</span> <span class="string">toc</span> <span class="string">♯tocのCSSクラス</span></span><br><span class="line">  <span class="attr">slugify:</span> <span class="string">transliteration</span> <span class="comment">#どのslugify関数を使用するかを選択します。現在、uslug（デフォルト）と音訳をサポートしています</span></span><br><span class="line">  <span class="attr">anchor:</span> <span class="comment"># 見出しごとにアンカーが必要かどうか(Default is false)</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">after</span> <span class="comment">#アンカーは、タイトルの前またはタイトルの後ろに置く必要があります。 (Default is after);</span></span><br><span class="line">    <span class="attr">symbol:</span> <span class="string">&#x27;#&#x27;</span> <span class="comment">#どのシンボルをアンカーにしたいか(Default is #);</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">header-anchor</span> <span class="comment">#アンカーのCSSクラス、(Default is header-anchor);</span></span><br></pre></td></tr></table></figure></li><li><p>hexo-generator-seo-friendly-sitemap,……「googleエンジン用にサイトマップ（XML）を生成。投稿記事オプションにsitemap: falseを付けると，そのページは除外される」</p></li><li><p>hexo-generator-tag……「タグページの生成」</p></li><li><p>hexo-fs……「ファイルシステムモジュール」</p></li><li><p>hexo-i18n……「多言語対応のなめのi18nが使えるようになる」</p></li><li><p>hexo-renderer-ejs2……「テンプレートエンジンejs関連」</p></li><li><p>hexo-renderer-marked……「マークダウン用レンダラー」</p></li><li><p>hexo-imagemin……「画像のサイズを圧縮する」</p><figure class="highlight yml"><figcaption><span>hexo-imagemin</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">imagemin:</span></span><br><span class="line">  <span class="attr">enable     :</span> <span class="literal">true</span>     <span class="string">//プラグインのon/off</span></span><br><span class="line">  <span class="attr">interlaced :</span> <span class="literal">false</span>    <span class="string">//プログレシッブレタリングをするか</span></span><br><span class="line">  <span class="attr">multipass  :</span> <span class="literal">false</span>    <span class="string">//svgの最適化</span></span><br><span class="line">  <span class="attr">optimizationLevel:</span> <span class="number">2</span>  <span class="string">//最適化レベルを0～7で</span></span><br><span class="line">  <span class="attr">pngquant   :</span> <span class="literal">false</span>    <span class="string">//pngquantプラグインを使用するか（別途インストール必要?）</span></span><br><span class="line">  <span class="attr">progressive:</span> <span class="literal">false</span>    <span class="string">//プログレッシブへの無損失変換</span></span><br></pre></td></tr></table></figure></li><li><p>hexo-notify……お知らせ用？</p></li><li><p>hexo-pagination……「ページネーション用プラグイン」</p></li><li><p>hexo-server……「ローカルで確認するためのサーバー機能」</p></li></ul><h3 id="取り合えず入れとけば動くもの"><a href="#取り合えず入れとけば動くもの" class="headerlink" title="取り合えず入れとけば動くもの"></a>取り合えず入れとけば動くもの</h3><ul><li><p>hexo-algoliasearch……「Webサイト用の検索ボックスalgoliaを使用できるようにする。当然algoliaアカウントが必要</p></li><li><p>hexo-autonofollow……「hexoの外部リンクをすべてnofollow属性を付加」</p></li><li><p>hexo-clean-css……「clean-cssのhexo版」</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">clean_css:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">*.min.css</span></span><br></pre></td></tr></table></figure></li><li><p>hexo-deployer-ftpsync……「FTPでサーバーと繋ぐ」</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ftpsync</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&lt;host&gt;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&lt;user&gt;</span></span><br><span class="line">  <span class="attr">pass:</span> <span class="string">&lt;password&gt;</span></span><br><span class="line">  <span class="attr">remote:</span> [<span class="string">remote</span>]</span><br><span class="line">  <span class="attr">port:</span> [<span class="string">port</span>]</span><br><span class="line">  <span class="attr">ignore:</span> [<span class="string">ignore</span>]</span><br><span class="line">  <span class="attr">connections:</span> [<span class="string">connections</span>]</span><br><span class="line">  <span class="attr">verbose:</span> [<span class="literal">true</span><span class="string">|false</span>]</span><br></pre></td></tr></table></figure></li><li><p>hexo-deployer-git……「gitにデプロイできるようにするプラグイン」</p><figure class="highlight plaintext"><figcaption><span>hexo-deployer-git languages:yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br><span class="line">  message: [message]</span><br><span class="line">  name: [git user]</span><br><span class="line">  email: [git email]</span><br><span class="line">  extend_dirs: [extend directory]</span><br><span class="line">  ignore_hidden: false # default is true</span><br><span class="line"></span><br><span class="line"># or this:</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  message: [message]</span><br><span class="line">  repo:</span><br><span class="line">    github: &lt;repository url&gt;,[branch]</span><br><span class="line">    gitcafe: &lt;repository url&gt;,[branch]</span><br><span class="line">  extend_dirs:</span><br><span class="line">    - [extend directory]</span><br><span class="line">    - [another extend directory]</span><br><span class="line">  ignore_hidden:</span><br><span class="line">    public: false</span><br><span class="line">    [extend directory]: true</span><br><span class="line">    [another extend directory]: false</span><br></pre></td></tr></table></figure></li><li><p>hexo-html-minifier……「HTMLMinifier。HTMLのサイズを縮小して読み込み速度UP」</p></li></ul><h3 id="投稿作成時に記述が必要なもの"><a href="#投稿作成時に記述が必要なもの" class="headerlink" title="投稿作成時に記述が必要なもの"></a>投稿作成時に記述が必要なもの</h3><ul><li>hexo-renderer-stylus……「NibというCSSライブラリを使えるようにする」</li></ul><h2 id="最後に"><a href="#最後に" class="headerlink" title="最後に"></a>最後に</h2><p>まだまだ使いこなせてないモノや便利なものがありそうなので，この記事は随時更新するかも。<br>兎に角迷ったら<a href="https://hexo.io/plugins/" title="hexo plugins">hexo公式のプラグインページへ</a></p><ul><li>hexo<br> - hexo-autonofollow<br> - hexo-browsersync<br> - hexo-clean-css<br> - hexo-deployer-ftpsync<br> - hexo-deployer-git<br> - hexo-filter-flowchart<br> - hexo-filter-sequence<br> - hexo-filter-sub<br> - hexo-filter-sup<br> - hexo-fs<br> - hexo-generator-archive<br> - hexo-generator-category<br> - hexo-generator-feed<br> - hexo-generator-index<br> - hexo-generator-seo-friendly-sitemap<br> - hexo-generator-tag<br> - hexo-html-minifier<br> - hexo-i18n<br> - hexo-imagemin<br> - hexo-notify<br> - hexo-pagination<br> - hexo-renderer-ejs2<br> - hexo-renderer-marked<br> - hexo-renderer-stylus<br> - hexo-server<br> - hexo-toc<br> - hexo-uglify<br> - hexo-util</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;hexoには様々な拡張機能がプラグインとして提供されている。&lt;br&gt;その中から，今自分が使っているモノのリストとその使い方をメモしておく。&lt;/p&gt;</summary>
    
    
    
    <category term="ホームページ作成" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/"/>
    
    <category term="ブログ" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/%E3%83%96%E3%83%AD%E3%82%B0/"/>
    
    
    <category term="web" scheme="https://demskiautio.github.io/demski/tags/web/"/>
    
    <category term="hexo" scheme="https://demskiautio.github.io/demski/tags/hexo/"/>
    
    <category term="plugin" scheme="https://demskiautio.github.io/demski/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>Atomの基本的な操作メモ</title>
    <link href="https://demskiautio.github.io/demski/2021/01/18/atom/"/>
    <id>https://demskiautio.github.io/demski/2021/01/18/atom/</id>
    <published>2021-01-18T08:39:13.000Z</published>
    <updated>2022-10-03T01:56:17.670Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Atomとは？"><a href="#Atomとは？" class="headerlink" title="Atomとは？"></a>Atomとは？</h2><p>Atomは,Github社製のオープンソースのテキストエディター。<br>これから主流になっていくと思われる。<br>パッケージ形式で機能を拡張できる。  </p><span id="more"></span><p>公式サイト→<a href="https://atom.io/" title="atom">Atom</a></p><!-- toc --><h2 id="インストールと基本"><a href="#インストールと基本" class="headerlink" title="インストールと基本"></a>インストールと基本</h2><p>サイトから落としてきたを『AtomSetup.exe』を実行。<br>勝手にインストールされる。  </p><p>基本は「Ctrl+Shift+p」でコマンドパレットが立ち上がるので，そこからやりたいことを検索する。<br>最初は，「setting」と打って管理画面をだして設定していく。</p><h2 id="基本的なショートカットキー"><a href="#基本的なショートカットキー" class="headerlink" title="基本的なショートカットキー"></a>基本的なショートカットキー</h2><p>以下は，これだけ知っておけば取りあえず使えそうなショートカットキーの纏め。</p><h3 id="コマンドパレット"><a href="#コマンドパレット" class="headerlink" title="コマンドパレット"></a>コマンドパレット</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Shift+p</span><br></pre></td></tr></table></figure><p>コマンドを調べたり実行したり</p><h3 id="設定ウィンドウを開く"><a href="#設定ウィンドウを開く" class="headerlink" title="設定ウィンドウを開く"></a>設定ウィンドウを開く</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+,</span><br></pre></td></tr></table></figure><p>コマンドパレットから「setting」と同じこと</p><h3 id="フォルダを開く"><a href="#フォルダを開く" class="headerlink" title="フォルダを開く"></a>フォルダを開く</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Shift+o</span><br></pre></td></tr></table></figure><h3 id="TreeViewとエディタのフォーカス移動"><a href="#TreeViewとエディタのフォーカス移動" class="headerlink" title="TreeViewとエディタのフォーカス移動"></a>TreeViewとエディタのフォーカス移動</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+0</span><br></pre></td></tr></table></figure><h3 id="TreeViewを非表示"><a href="#TreeViewを非表示" class="headerlink" title="TreeViewを非表示"></a>TreeViewを非表示</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+\</span><br></pre></td></tr></table></figure><h3 id="TreeView内のファイル名検索"><a href="#TreeView内のファイル名検索" class="headerlink" title="TreeView内のファイル名検索"></a>TreeView内のファイル名検索</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+p</span><br></pre></td></tr></table></figure><h3 id="ファイル内の文字列検索・置換"><a href="#ファイル内の文字列検索・置換" class="headerlink" title="ファイル内の文字列検索・置換"></a>ファイル内の文字列検索・置換</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + f</span><br></pre></td></tr></table></figure><h3 id="TreeView内の文字列検索／置換"><a href="#TreeView内の文字列検索／置換" class="headerlink" title="TreeView内の文字列検索／置換"></a>TreeView内の文字列検索／置換</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Shif+f</span><br></pre></td></tr></table></figure><h3 id="行の入れ替え"><a href="#行の入れ替え" class="headerlink" title="行の入れ替え"></a>行の入れ替え</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+(↑ or ↓)</span><br></pre></td></tr></table></figure><h3 id="行の複製"><a href="#行の複製" class="headerlink" title="行の複製"></a>行の複製</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Shift+d</span><br></pre></td></tr></table></figure><h3 id="矩形選択"><a href="#矩形選択" class="headerlink" title="矩形選択"></a>矩形選択</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Alt+(↑ or ↓)</span><br></pre></td></tr></table></figure><h3 id="カーソル上の同じ単語を選択"><a href="#カーソル上の同じ単語を選択" class="headerlink" title="カーソル上の同じ単語を選択"></a>カーソル上の同じ単語を選択</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+d</span><br></pre></td></tr></table></figure><h3 id="ウィンドウ分割"><a href="#ウィンドウ分割" class="headerlink" title="ウィンドウ分割"></a>ウィンドウ分割</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+k, (↑ or → or ↓ or ←)</span><br></pre></td></tr></table></figure><p>押したカーソルキーの方向にウィンドウを分割する</p><h3 id="分割したウィンドウへフォーカスを移動"><a href="#分割したウィンドウへフォーカスを移動" class="headerlink" title="分割したウィンドウへフォーカスを移動"></a>分割したウィンドウへフォーカスを移動</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+k, Ctrl+(↑ or → or ↓ or ←)</span><br></pre></td></tr></table></figure><h3 id="アクティブなタブを閉じる"><a href="#アクティブなタブを閉じる" class="headerlink" title="アクティブなタブを閉じる"></a>アクティブなタブを閉じる</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w</span><br></pre></td></tr></table></figure><h3 id="開いているタブを全部閉じる"><a href="#開いているタブを全部閉じる" class="headerlink" title="開いているタブを全部閉じる"></a>開いているタブを全部閉じる</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + k, w</span><br></pre></td></tr></table></figure><h3 id="閉じたタブを復活する"><a href="#閉じたタブを復活する" class="headerlink" title="閉じたタブを復活する"></a>閉じたタブを復活する</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Shift + t</span><br></pre></td></tr></table></figure><h3 id="コメント-x2F-アンコメント"><a href="#コメント-x2F-アンコメント" class="headerlink" title="コメント&#x2F;アンコメント"></a>コメント&#x2F;アンコメント</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + /</span><br></pre></td></tr></table></figure><h3 id="言語選択"><a href="#言語選択" class="headerlink" title="言語選択"></a>言語選択</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shift + Ctrl + l</span><br></pre></td></tr></table></figure><h3 id="Word単位で進む"><a href="#Word単位で進む" class="headerlink" title="Word単位で進む"></a>Word単位で進む</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alt + f</span><br></pre></td></tr></table></figure><p>###Word単位で戻る</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alt + b</span><br></pre></td></tr></table></figure><h3 id="カーソル位置からWordの最後まで削除"><a href="#カーソル位置からWordの最後まで削除" class="headerlink" title="カーソル位置からWordの最後まで削除"></a>カーソル位置からWordの最後まで削除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alt + d</span><br></pre></td></tr></table></figure><h3 id="カーソル位置からWordの最初まで削除"><a href="#カーソル位置からWordの最初まで削除" class="headerlink" title="カーソル位置からWordの最初まで削除"></a>カーソル位置からWordの最初まで削除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alt + h</span><br></pre></td></tr></table></figure><h3 id="行の先頭に移動"><a href="#行の先頭に移動" class="headerlink" title="行の先頭に移動"></a>行の先頭に移動</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Home</span><br></pre></td></tr></table></figure><h3 id="行の末尾に移動"><a href="#行の末尾に移動" class="headerlink" title="行の末尾に移動"></a>行の末尾に移動</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">End`</span><br></pre></td></tr></table></figure><h3 id="ファイル検索"><a href="#ファイル検索" class="headerlink" title="ファイル検索"></a>ファイル検索</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + t</span><br></pre></td></tr></table></figure><h3 id="コードの整形-atom-beautify"><a href="#コードの整形-atom-beautify" class="headerlink" title="コードの整形(atom-beautify)"></a>コードの整形(atom-beautify)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Alt + b</span><br></pre></td></tr></table></figure><h3 id="TreeViewとタブを行き来する"><a href="#TreeViewとタブを行き来する" class="headerlink" title="TreeViewとタブを行き来する"></a>TreeViewとタブを行き来する</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + 0</span><br></pre></td></tr></table></figure><h2 id="メニューの再表示方法"><a href="#メニューの再表示方法" class="headerlink" title="メニューの再表示方法"></a>メニューの再表示方法</h2><p>1.Ctrl + Shift + P 押下</p><p>2.メニュー一覧が表示される</p><p>3.toggle と入力</p><p>4.Window:Toggle Menu Bar を選択</p><p>5.メニューが表示される</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Atomとは？&quot;&gt;&lt;a href=&quot;#Atomとは？&quot; class=&quot;headerlink&quot; title=&quot;Atomとは？&quot;&gt;&lt;/a&gt;Atomとは？&lt;/h2&gt;&lt;p&gt;Atomは,Github社製のオープンソースのテキストエディター。&lt;br&gt;これから主流になっていくと思われる。&lt;br&gt;パッケージ形式で機能を拡張できる。  &lt;/p&gt;</summary>
    
    
    
    
    <category term="Atom" scheme="https://demskiautio.github.io/demski/tags/Atom/"/>
    
    <category term="github" scheme="https://demskiautio.github.io/demski/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Javascrpt 変数の巻き上げ</title>
    <link href="https://demskiautio.github.io/demski/2020/12/25/javascrpt-theory1/"/>
    <id>https://demskiautio.github.io/demski/2020/12/25/javascrpt-theory1/</id>
    <published>2020-12-25T11:55:21.000Z</published>
    <updated>2022-10-03T01:57:29.860Z</updated>
    
    <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>javascrptの重要な概念の一つ，「変数の巻き上げ(hoisting)」についてのまとめ。<br>javascrpt特有で最重要ポイントの一つ。<br>これを分かってると，コードの読み方が一歩プロに近づく…カモ</p><span id="more"></span><!--toc--><h2 id="大前提１-グローバル変数とローカル変数"><a href="#大前提１-グローバル変数とローカル変数" class="headerlink" title="大前提１ グローバル変数とローカル変数"></a>大前提１ グローバル変数とローカル変数</h2><p>まずは，基礎中の基礎，「グローバル変数」と「ローカル変数」について。  </p><figure class="codeblock codeblock--tabbed"><figcaption><span>変数</span><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> shaver = <span class="string">'松本イズミ'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>{</span><br><span class="line">    <span class="built_in">console</span>.log(shaver);</span><br><span class="line">    <span class="keyword">var</span> imo = <span class="string">'松本いずみ'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(imo);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">show();</span><br><span class="line"><span class="built_in">console</span>.log(shaver);</span><br><span class="line"><span class="built_in">console</span>.log(imo);</span><br></pre></td></tr></tbody></table></figure></div></figure><p>これを実行すると</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">松本イズミ</span><br><span class="line">松本いずみ</span><br><span class="line">松本イズミ</span><br><span class="line">Uncaught ReferenceError: imo is not defined</span><br></pre></td></tr></table></figure><p>と表示されます。<br>最後が「imo is not defined」となってます。<br>これは，変数imoこと「松本いずみ」はローカル変数だから。<br>つまり，変数imoは関数show()の中でしか使えないということ。<br>逆に，変数shaverこと「松本イズミ」はグローバル変数なので，関数show内でも外でも使えます。当然，新しく作った関数内でも使えます。</p><h2 id="本題1-変数の巻き上げ"><a href="#本題1-変数の巻き上げ" class="headerlink" title="本題1 変数の巻き上げ"></a>本題1 変数の巻き上げ</h2><p>さて，ここからが本題です。<br>まずは，コードを見てみます。</p><figure class="codeblock codeblock--tabbed"><figcaption><span>hoisting</span><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> izumi = <span class="string">'松本イズミ'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>{</span><br><span class="line">    cosole.log(izumi);</span><br><span class="line">    <span class="keyword">var</span> izumi = <span class="string">'松本いずみ'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(izumi);</span><br><span class="line">}</span><br><span class="line">show();</span><br></pre></td></tr></tbody></table></figure></div></figure><p>コンソールにどのように表示されるでしょうか？  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">松本イズミ</span><br><span class="line">松本いずみ</span><br></pre></td></tr></table></figure><p>と思った人は不正解。<br>正解は</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">undefined</span><br><span class="line">松本いずみ</span><br></pre></td></tr></table></figure><h2 id="本題2-巻き上げの正体"><a href="#本題2-巻き上げの正体" class="headerlink" title="本題2 巻き上げの正体"></a>本題2 巻き上げの正体</h2><p>Javascrptでは，関数内のどこでもvar宣言で変数を定義できる。<br>しかし，実行時にはその変数は関数の先頭で宣言されたものと同じ扱いになる。<br>つまり，以下のコードと同等となる。</p><figure class="codeblock codeblock--tabbed"><figcaption><span>hoisting</span><ul class="tabs"><li class="tab active">js</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> izumi = <span class="string">'松本イズミ'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>{</span><br><span class="line">    <span class="keyword">var</span> izumi; <span class="comment">//undefined</span></span><br><span class="line">    cosole.log(izumi);</span><br><span class="line">    <span class="keyword">var</span> izumi = <span class="string">'松本いずみ'</span>;</span><br><span class="line">    cosole.log(izumi); <span class="comment">//松本いずみ</span></span><br><span class="line">}</span><br><span class="line">show();</span><br></pre></td></tr></tbody></table></figure></div></figure><p>グローバル変数のでて定義した「松本イズミ」は，関数内で巻き上げられた[var izumi;]に上書きされちゃうんですね。<br>結果，表示されるのは「undefined」になると。<br>なぜ，このような仕様になってるのかというと，結構複雑な事情があるみたい。<br>次回，さらに掘り下げてみます。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://analogic.jp/hoisting/" title="ANALOGIC">知らないと怖い「変数の巻き上げ」とは？</a><br><a href="http://qiita.com/39_isao/items/d9d80e98b5bd1938bc1d">やっとわかったjsの「巻き上げ」</a>  </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;javascrptの重要な概念の一つ，「変数の巻き上げ(hoisting)」についてのまとめ。&lt;br&gt;javascrpt特有で最重要ポイントの一つ。&lt;br&gt;これを分かってると，コードの読み方が一歩プロに近づく…カモ&lt;/p&gt;</summary>
    
    
    
    
    <category term="JavaScript" scheme="https://demskiautio.github.io/demski/tags/JavaScript/"/>
    
    <category term="プログラミング" scheme="https://demskiautio.github.io/demski/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
    <category term="基礎" scheme="https://demskiautio.github.io/demski/tags/%E5%9F%BA%E7%A4%8E/"/>
    
    <category term="theory" scheme="https://demskiautio.github.io/demski/tags/theory/"/>
    
  </entry>
  
  <entry>
    <title>ESLint事始め</title>
    <link href="https://demskiautio.github.io/demski/2020/08/14/ESLintStarted/"/>
    <id>https://demskiautio.github.io/demski/2020/08/14/ESLintStarted/</id>
    <published>2020-08-14T13:48:58.000Z</published>
    <updated>2020-08-22T11:02:36.203Z</updated>
    
    <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>ESLint は JavaScript のための静的検証ツール。<br>コードを実行する前に明らかなバグを見つけたり、括弧やスペースの使い方などのスタイルを統一したりするのに役立つ。<br>以前メモしたEditorConfigも，コードスタイル統一ができるが，これにJavaScripの文法チェック機能が付いた感じ。<br>React.jsやAngular.jsなどにも対応しているので，Atomにその環境を構築したのでそのメモ。</p><span id="more"></span><!--toc--><h2 id="ESLintとは"><a href="#ESLintとは" class="headerlink" title="ESLintとは"></a>ESLintとは</h2><p>公式ホームぺージ<a href="http://eslint.org/">ESLint</a> によると</p><blockquote><p>ESLintはコードを静的に分析して、問題をすばやく見つけます。 ESLintはほとんどのテキストエディターに組み込まれており、ESLintを継続的インテグレーションパイプラインの一部として実行できます。</p></blockquote><p>との事。<br>Node.jsのnpmパッケージとして提供されている。</p><h3 id="特徴"><a href="#特徴" class="headerlink" title="特徴"></a>特徴</h3><ul><li>すべての検証ルールを自由に on&#x2F;off できる</li><li>カスタムルールを簡単に作れる</li><li>EcmaScript 2015 &#x2F; 2016やReactなどの構文にも対応</li><li><a href="https://facebook.github.io/jsx/">JSX 記法</a> をサポートしている</li><li><a href="http://babeljs.io/">Babel</a> と連携している。</li><li>プラグインが豊富</li></ul><h2 id="Atom-にESLintの環境を構築する"><a href="#Atom-にESLintの環境を構築する" class="headerlink" title="Atom にESLintの環境を構築する"></a>Atom にESLintの環境を構築する</h2><p>npm パッケージなので，様々なエディタに導入する事ができるのも特徴。<br>自分はGitHub製のAtomを使用しているので，これにESLintを組み込んでいく。</p><h3 id="「linter-eslint」をインストール"><a href="#「linter-eslint」をインストール" class="headerlink" title="「linter-eslint」をインストール"></a>「linter-eslint」をインストール</h3><p>AtomでESLintを使うためのパッケージである「linter-eslint」をインストールする。<br>他のプラグインと同様に設定画面のインストールから検索してインストールするか，コマンドプロンプトで次のコマンドを叩く。</p><figure class="codeblock codeblock--tabbed"><figcaption><a href="https://atom.io/packages/linter-eslint">linter-eslint</a><ul class="tabs"><li class="tab active">CLI</li></ul></figcaption><div class="tabs-content"><figure class="highlight plain" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install linter-eslint</span><br></pre></td></tr></tbody></table></figure></div></figure><p>さらに，依存関係にあるlinterといパッケージもインストールする。(インストール順は関係なさそう)</p><figure class="codeblock codeblock--tabbed"><figcaption><a href="https://atom.io/packages/lintert">linter</a><ul class="tabs"><li class="tab active">CLI</li></ul></figcaption><div class="tabs-content"><figure class="highlight plain" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install linter</span><br></pre></td></tr></tbody></table></figure></div></figure><p>linterはAtomエディターの基本的なリンタープロバイダー。他の言語用のLinterをインストールすることで文法チェック等ができるようになる。</p><p>さらに以下のインストールを入れると，Atomエディタの下部にリアルタイムにエラーをチェックし表示してくれる。</p><figure class="codeblock codeblock--tabbed"><figcaption><a href="https://atom.io/packages/linter-ui-default">linter-eslint</a><ul class="tabs"><li class="tab active">CLI</li></ul></figcaption><div class="tabs-content"><figure class="highlight plain" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install linter-ui-default</span><br></pre></td></tr></tbody></table></figure></div></figure><h3 id="ESLint-本体のインストール"><a href="#ESLint-本体のインストール" class="headerlink" title="ESLint 本体のインストール"></a>ESLint 本体のインストール</h3><p>次にESLintの本体をnpmでインストールする。<br>インストール箇所は，プロジェクト単体かグローバルにインストールできる。ESLint本体には，プラグインを組み込むことで各所で策定されたルールを簡単に導入する事ができる。</p><figure class="codeblock codeblock--tabbed"><figcaption><a href="https://eslint.org/">ESLint</a><ul class="tabs"><li class="tab active">CLI</li></ul></figcaption><div class="tabs-content"><figure class="highlight plain" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># ローカルインストール</span><br><span class="line">npm install eslint --save-dev</span><br><span class="line"></span><br><span class="line"># グローバルインストール</span><br><span class="line">npm install -g eslint --save-dev</span><br><span class="line"></span><br><span class="line"># プラグインを適用する場合</span><br><span class="line">npm install --save-dev [eslint-plugins]</span><br></pre></td></tr></tbody></table></figure></div></figure><p>次に「.eslintrc」ファイルをプロジェクトフォルダに作成する。<br>これはESLintの設定ファイルで，ルールの設定もここで指定する。<br>設定できるルールは，<a href="https://eslint.org/docs/rules/">公式ページ</a>を参照のこと。</p><h2 id="eslintrc-ファイルの作成"><a href="#eslintrc-ファイルの作成" class="headerlink" title=".eslintrc ファイルの作成"></a>.eslintrc ファイルの作成</h2><p>どの項目を，どの形式でチェックするかを指定する「.eslintrc」ファイルを作成する。<br>作成自体は簡単で次のコマンドを叩き，質問に回答するだけ。</p><figure class="codeblock codeblock--tabbed"><figcaption><a href="https://github.com/MozillaFoundation/mofo-style">mofo-styleインストール</a><ul class="tabs"><li class="tab active">CLI</li></ul></figcaption><div class="tabs-content"><figure class="highlight plain" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">npx eslint --init</span><br><span class="line"></span><br><span class="line">PS D:\練習\ReactStudy\sample&gt; eslint --init</span><br><span class="line"> How would you like to use ESLint? ...</span><br><span class="line">  To check syntax only</span><br><span class="line">&gt; To check syntax and find problems</span><br><span class="line">&gt; To check syntax, find problems, and enforce code style</span><br><span class="line"></span><br><span class="line">構文のみをチェックするには</span><br><span class="line">&gt;構文をチェックして問題を見つけるには</span><br><span class="line">&gt;構文をチェックし、問題を見つけて、コードスタイルを適用するには</span><br><span class="line"></span><br><span class="line">   What type of modules does your project use? ...</span><br><span class="line">&gt; JavaScript modules (import/export)</span><br><span class="line">&gt; CommonJS (require/exports)</span><br><span class="line">&gt; None of these</span><br><span class="line">&gt; プロジェクトはどのタイプのモジュールを使用しますか？ ...</span><br><span class="line">&gt; JavaScriptモジュール（インポート/エクスポート）</span><br><span class="line">&gt; CommonJS（必須/エクスポート）</span><br><span class="line">&gt; どれでもない</span><br><span class="line"></span><br><span class="line">   Which framework does your project use? ...</span><br><span class="line">&gt; React</span><br><span class="line">&gt; Vue.js</span><br><span class="line">&gt; None of these</span><br><span class="line">&gt; プロジェクトはどのフレームワークを使用していますか？ ...</span><br><span class="line">&gt; React</span><br><span class="line">&gt; Vue.js</span><br><span class="line">&gt; どれでもない</span><br><span class="line"></span><br><span class="line">    Does your project use TypeScript?</span><br><span class="line">    </span><br><span class="line">    Where does your code run? ...  (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection)</span><br><span class="line">√ Browser</span><br><span class="line">√ Node</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">? How would you like to define a style for your project? ...</span><br><span class="line">？ プロジェクトのスタイルをどのように定義しますか？ ...</span><br><span class="line">Browser</span><br><span class="line">Node</span><br><span class="line"></span><br><span class="line">&gt; Use a popular style guide</span><br><span class="line">&gt; Answer questions about your style</span><br><span class="line">&gt; Inspect your JavaScript file(s)</span><br><span class="line">&gt; 人気のあるスタイルガイドを使用する</span><br><span class="line">&gt; あなたのスタイルについての質問に答える</span><br><span class="line">&gt; JavaScriptファイルを検査する</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   Which style guide do you want to follow? ...</span><br><span class="line">   どんなスタイルガイドをフォローしたいですか？ ...</span><br><span class="line">&gt; Airbnb: https://github.com/airbnb/javascript</span><br><span class="line">&gt; Standard: https://github.com/standard/standard</span><br><span class="line">&gt; Google: https://github.com/google/eslint-config-google</span><br><span class="line"></span><br><span class="line">   What format do you want your config file to be in? ...</span><br><span class="line">&gt; JavaScript</span><br><span class="line">&gt; YAML</span><br><span class="line">&gt; JSON</span><br><span class="line">&gt; 構成ファイルをどの形式にしたいですか？ ...</span><br><span class="line">&gt; JavaScript</span><br><span class="line">&gt; YAML</span><br><span class="line">&gt; JSON</span><br><span class="line"></span><br><span class="line">   eslint-plugin-react@^7.20.0 eslint-config-airbnb@latest eslint@^5.16.0 || ^6.8.0 || ^7.2.0 eslint-plugin-import@^2.21.2 eslint-plugin-jsx-a11y@^6.3.0 eslint-plugin-react-hooks@^4 || ^3 || ^2.3.0 || ^1.7.0</span><br><span class="line">√ Would you like to install them now with npm? · No / Yes</span><br><span class="line">今すぐnpmでインストールしますか？</span><br></pre></td></tr></tbody></table></figure></div></figure><p>取り合えず人気のある「airbnb」を設定した例。<br>敢えて選ばずに好きなルールを適用するなり，自作するなりもできる。</p><h2 id="eslintrcの記述"><a href="#eslintrcの記述" class="headerlink" title=".eslintrcの記述"></a>.eslintrcの記述</h2><p>「.eslintrc」にルールを記述していく。<br>面倒くさい場合は下記を記入すると，すべてが適用される。</p><figure class="codeblock codeblock--tabbed"><figcaption><span>.eslintrc</span><ul class="tabs"><li class="tab active">CLI</li></ul></figcaption><div class="tabs-content"><figure class="highlight plain" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  "extends": "eslint:recommended"</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></figure><h3 id="プラグインを使う"><a href="#プラグインを使う" class="headerlink" title="プラグインを使う"></a>プラグインを使う</h3><p>JavaScrptのスタイルガイドは，複数のIT系デベロッパーが公表している。<br>主なものに</p><ul><li><a href="http://google.github.io/styleguide/javascriptguide.xml">Google JavaScript Style Guide</a></li><li><a href="https://developer.mozilla.org/ja/docs/JavaScript_style_guide">JavaScript style guide | MDN</a></li><li><a href="http://nodeguide.com/style.html">Felix’s Node.js Style Guide</a></li><li><a href="https://mitsuruog.github.io/javascript-style-guide/">Airbnb JavaScript Guide</a></li></ul><p>今回はFireFoxブラウザの開発元であるMozilla Foundation JS Style Guideを採用。<br>理由は，単に好きなブラウザなので(適当～)</p><p>導入については，以下のGithubを参照にしていく。</p><ul><li><a href="https://github.com/MozillaFoundation/mofo-style">MozillaFoundation&#x2F;mofo-style</a></li></ul><figure class="codeblock codeblock--tabbed"><figcaption><a href="https://github.com/MozillaFoundation/mofo-style">mofo-styleインストール</a><ul class="tabs"><li class="tab active">CLI</li></ul></figcaption><div class="tabs-content"><figure class="highlight plain" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mofo-style --save-dev</span><br></pre></td></tr></tbody></table></figure></div></figure><p>最新のES6に対応させるには此方を参照。 <a href="https://eslint.org/docs/user-guide/configuring">Configuring ESLint</a></p><h2 id="終わりに"><a href="#終わりに" class="headerlink" title="終わりに"></a>終わりに</h2><p>今迄はコードが完成してからブラウザのdeveloperツールで一つ一つバグを潰してた。<br>なので，リアルタイムで警告してくれるのは嬉しい。<br>まだ，厳格なルール設定のママなので，今いらないルールを無効化する方法を調べていきたい。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://qiita.com/HisakoIsaka/items/40966a0c78846f4053c9">AtomにESLint導入した</a><br><a href="https://mae.chab.in/archives/2874">ESLintをAtomに導入し、Reactの構文にも対応したAirbnbのJSスタイルガイドを使う</a><br><a href="https://joppot.info/2017/04/21/3839">Atomにreact+es6対応したeslintの環境を構築する</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;ESLint は JavaScript のための静的検証ツール。&lt;br&gt;コードを実行する前に明らかなバグを見つけたり、括弧やスペースの使い方などのスタイルを統一したりするのに役立つ。&lt;br&gt;以前メモしたEditorConfigも，コードスタイル統一ができるが，これにJavaScripの文法チェック機能が付いた感じ。&lt;br&gt;React.jsやAngular.jsなどにも対応しているので，Atomにその環境を構築したのでそのメモ。&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://demskiautio.github.io/demski/categories/JavaScript/"/>
    
    <category term="ESLint" scheme="https://demskiautio.github.io/demski/categories/JavaScript/ESLint/"/>
    
    <category term="Web開発" scheme="https://demskiautio.github.io/demski/categories/Web%E9%96%8B%E7%99%BA/"/>
    
    <category term="開発ツール" scheme="https://demskiautio.github.io/demski/categories/Web%E9%96%8B%E7%99%BA/%E9%96%8B%E7%99%BA%E3%83%84%E3%83%BC%E3%83%AB/"/>
    
    <category term="ESlint" scheme="https://demskiautio.github.io/demski/categories/Web%E9%96%8B%E7%99%BA/%E9%96%8B%E7%99%BA%E3%83%84%E3%83%BC%E3%83%AB/ESlint/"/>
    
    
    <category term="JavaScript" scheme="https://demskiautio.github.io/demski/tags/JavaScript/"/>
    
    <category term="プログラミング" scheme="https://demskiautio.github.io/demski/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
    <category term="基礎" scheme="https://demskiautio.github.io/demski/tags/%E5%9F%BA%E7%A4%8E/"/>
    
    <category term="theory" scheme="https://demskiautio.github.io/demski/tags/theory/"/>
    
  </entry>
  
  <entry>
    <title>npmコマンドについてのまとめ</title>
    <link href="https://demskiautio.github.io/demski/2020/02/27/npm-command/"/>
    <id>https://demskiautio.github.io/demski/2020/02/27/npm-command/</id>
    <published>2020-02-27T13:48:58.000Z</published>
    <updated>2021-02-11T03:50:34.076Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初めに"><a href="#初めに" class="headerlink" title="初めに"></a>初めに</h2><p>Node.jsをはじめ，Javasceriptを使用してのWeb開発に欠かせなくなってきているnpmコマンドについての備忘録。  </p><ul><li><a href="https://www.npmjs.com/">公式サイト</a></li></ul><span id="more"></span><!--toc--><h2 id="npmの概要"><a href="#npmの概要" class="headerlink" title="npmの概要"></a>npmの概要</h2><h3 id="npmとは"><a href="#npmとは" class="headerlink" title="npmとは"></a>npmとは</h3><p>npmとは「Node Package Manager」の略で，その名の通りNode.jsのモジュールを管理するツール。<br>JavaScriptでのWebアプリの開発には，Node.js及びnpmモジュールが多く使われるようになっている。<br>その為，npmコマンドを叩くことが基本の「き」のような状況。  </p><h3 id="npmのインストールとpackage-json"><a href="#npmのインストールとpackage-json" class="headerlink" title="npmのインストールとpackage.json"></a>npmのインストールとpackage.json</h3><p>npmのインストールは，Node.jsをインストールすれば，自動的にインストールされる。<br>各モジュールは，必要に応じてpackage.jsonで管理していくことになる。<br>依存関係のモジュールも一括インストールしてくれるので便利。</p><h3 id="node-modules-フォルダ"><a href="#node-modules-フォルダ" class="headerlink" title="node_modules フォルダ"></a>node_modules フォルダ</h3><p>カレントディレクトリ配下にあり、カレントディレクトリにインストールされるモジュールの中身が配置されるフォルダ。<br>エラー等に悩んだら，フォルダを一端削除してインストールし直すと良いかもしれない。</p><h3 id="scopeについて"><a href="#scopeについて" class="headerlink" title="scopeについて"></a>scopeについて</h3><p>scopeとは,パッケージ名の前につける@から&#x2F;までの名前空間の事。@以降にnpmのユーザーアカウント名もしくは組織名が入ります。<br>これによってパッケージ名が重複しても，別のモジュールとして認識される。  </p><h3 id="パッケージのバージョン表記"><a href="#パッケージのバージョン表記" class="headerlink" title="パッケージのバージョン表記"></a>パッケージのバージョン表記</h3><p>パッケージのバージョンは主に三つの数字で表される。<br>意味は，前から・・・</p><ul><li>Major Release：仕様そのものの変更。upgradeする場合はアプリケーションの改修が必要になる可能性あり。</li><li>Minor Release：仕様を維持した状態での機能追加。upgradeしてもアプリケーションは壊れない。</li><li>Patch Release：バグ修正。upgradeしてもアプリケーションは壊れない。</li></ul><p>となる。</p><h2 id="各コマンドについて"><a href="#各コマンドについて" class="headerlink" title="各コマンドについて"></a>各コマンドについて</h2><h3 id="バージョンの取得"><a href="#バージョンの取得" class="headerlink" title="バージョンの取得"></a>バージョンの取得</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="初期化"><a href="#初期化" class="headerlink" title="初期化"></a>初期化</h3><p>ディレクトリにpackage.jsonを作成し，プロジェクトを開始する。<br>init後にアプリ名やヴァージョンなど幾つか質問されるが，特に設定しなくともよい。<br>問い合わせが面倒なら「-y」を付けるとよい。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Learning\spa&gt; npm init                                                    This utility will walk you through creating a package.json file.</span><br><span class="line">It only covers the most common items, and tries to guess sensible defaults.</span><br><span class="line"></span><br><span class="line">See `npm help json` for definitive documentation on these fields</span><br><span class="line">and exactly what they do.</span><br><span class="line"></span><br><span class="line">Use `npm install &lt;pkg&gt;` afterwards to install a package and</span><br><span class="line">save it as a dependency in the package.json file.</span><br><span class="line"></span><br><span class="line">Press ^C at any time to quit.</span><br><span class="line">package name: (spa)</span><br><span class="line">version: (1.0.0)</span><br><span class="line">description:</span><br><span class="line">entry point: (index.js)</span><br><span class="line">test command:</span><br><span class="line">git repository:</span><br><span class="line">keywords:</span><br><span class="line">author:</span><br><span class="line">license: (ISC)</span><br><span class="line">About to write to D:\Learning\spa\package.json:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;spa&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Is this OK? (yes) yes</span><br></pre></td></tr></table></figure><h3 id="パッケージインストール"><a href="#パッケージインストール" class="headerlink" title="パッケージインストール"></a>パッケージインストール</h3><p>次のコマンドで，自分の使いたいパッケージを指定する。<br>package.jsonに記入されると共に，パッケージがダウンロードされる。この時，依存関係にあるパッケージを同時にダウンロードされる。<br>ダウンロードされたパッケージはnode_modules以下に配置される。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install パッケージ名</span><br><span class="line">//もしくは</span><br><span class="line">npm i パッケージ名</span><br></pre></td></tr></table></figure><p>既にpackage.jsonに記入がある場合は，次のコマンドを入力する。<br>package.jsonさえコピーすれば，別の端末で同じ環境を構築することができる。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">//もしくは</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>次のオプションを付ける事ができる。</p><blockquote><p>–no-save</p><p>package.json に書き込まない場合に指定します。npm4 までは package.json に書き込まないのがデフォルトでしたが、npm5 からは –save がデフォルトとなりました。</p><p>–save</p><p>依存パッケージの場合に指定します。package.json の dependencies に記録されます。このパッケージを誰かが npm install したときに依存パッケージとしてインストールされます。</p><p>–save-optional</p><p>依存はするけれど必須ではないパッケージの場合に指定します。package.json の optionalDependencies に記録されます。npm install でインストールされますが、インストールに失敗してもスルーされます。</p><p>–save-dev</p><p>テストツールなど、開発者が使用するパッケージの場合に指定します。package.json の devDependencies に記録されます。このパッケージを npm install しても、インストールされません。ただし、パッケージを Git から clone して npm install した場合は開発者とみなされ、インストールされます。</p></blockquote><p>パッケージをアンインストールするには次のコマンドを使う。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall パッケージ名</span><br><span class="line">npm un パッケージ名</span><br><span class="line">npm unlink パッケージ名</span><br><span class="line">npm remove パッケージ名</span><br><span class="line">npm rm パッケージ名</span><br><span class="line">npm r パッケージ名</span><br></pre></td></tr></table></figure><p>上記- -saveオプション等使う事が出来る。</p><h3 id="パッケージ情報"><a href="#パッケージ情報" class="headerlink" title="パッケージ情報"></a>パッケージ情報</h3><p>インストール済みのパッケージ一覧を表示する。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm list</span><br><span class="line">npm ls</span><br><span class="line">npm la</span><br><span class="line">npm ll</span><br></pre></td></tr></table></figure><p>依存関係のパッケージを省いた一覧は次のオプションを付ける。(自分がインストールしたパッケージのみ)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list --depth=0</span><br></pre></td></tr></table></figure><h3 id="パッケージアップデート"><a href="#パッケージアップデート" class="headerlink" title="パッケージアップデート"></a>パッケージアップデート</h3><p>使用しているパッケージに更新されているか確認する。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm outdated</span><br></pre></td></tr></table></figure><p>パッケージをアップデートする。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update パッケージ</span><br></pre></td></tr></table></figure><p>パッケージ名を省略するとpackage.jsonに記入された全てのパッケージをアップデートする。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update</span><br></pre></td></tr></table></figure><h3 id="パッケージアンインストール"><a href="#パッケージアンインストール" class="headerlink" title="パッケージアンインストール"></a>パッケージアンインストール</h3><p>パッケージをアンインストールする。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall パッケージ</span><br></pre></td></tr></table></figure><h3 id="パッケージ検索"><a href="#パッケージ検索" class="headerlink" title="パッケージ検索"></a>パッケージ検索</h3><p>キーワードに関連するパッケージを npm リポジトリから検索します</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm search キーワード</span><br></pre></td></tr></table></figure><h3 id="パッケージの詳細情報"><a href="#パッケージの詳細情報" class="headerlink" title="パッケージの詳細情報"></a>パッケージの詳細情報</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm info パッケージ</span><br><span class="line">npm view パッケージ</span><br><span class="line">npm show パッケージ</span><br></pre></td></tr></table></figure><h3 id="パッケージのバージョン"><a href="#パッケージのバージョン" class="headerlink" title="パッケージのバージョン"></a>パッケージのバージョン</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm info パッケージ version  // 最新バージョンを表示</span><br><span class="line">npm info パッケージ versions  // インストール可能なバージョン一欄を表示</span><br></pre></td></tr></table></figure><h3 id="タスク実行"><a href="#タスク実行" class="headerlink" title="タスク実行"></a>タスク実行</h3><p>タスクはpackage.jsonのscript:に記述します。</p><figure class="highlight json"><figcaption><span>npmタスク</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;browserify src/main.js &gt; build/bundle.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>此方は，少し複雑なので項を改め纏めます。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;初めに&quot;&gt;&lt;a href=&quot;#初めに&quot; class=&quot;headerlink&quot; title=&quot;初めに&quot;&gt;&lt;/a&gt;初めに&lt;/h2&gt;&lt;p&gt;Node.jsをはじめ，Javasceriptを使用してのWeb開発に欠かせなくなってきているnpmコマンドについての備忘録。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;公式サイト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Node.js" scheme="https://demskiautio.github.io/demski/categories/Node-js/"/>
    
    <category term="npm" scheme="https://demskiautio.github.io/demski/categories/Node-js/npm/"/>
    
    <category term="Web開発" scheme="https://demskiautio.github.io/demski/categories/Web%E9%96%8B%E7%99%BA/"/>
    
    <category term="開発ツール" scheme="https://demskiautio.github.io/demski/categories/Web%E9%96%8B%E7%99%BA/%E9%96%8B%E7%99%BA%E3%83%84%E3%83%BC%E3%83%AB/"/>
    
    <category term="npm" scheme="https://demskiautio.github.io/demski/categories/Web%E9%96%8B%E7%99%BA/%E9%96%8B%E7%99%BA%E3%83%84%E3%83%BC%E3%83%AB/npm/"/>
    
    
    <category term="Node" scheme="https://demskiautio.github.io/demski/tags/Node/"/>
    
    <category term="開発ツール" scheme="https://demskiautio.github.io/demski/tags/%E9%96%8B%E7%99%BA%E3%83%84%E3%83%BC%E3%83%AB/"/>
    
    <category term="npm" scheme="https://demskiautio.github.io/demski/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Windows10が不安定な時にコマンドプロンプトから回復する方法</title>
    <link href="https://demskiautio.github.io/demski/2019/06/28/WindowsRepair/"/>
    <id>https://demskiautio.github.io/demski/2019/06/28/WindowsRepair/</id>
    <published>2019-06-28T09:26:02.000Z</published>
    <updated>2021-02-11T03:50:34.003Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初めに"><a href="#初めに" class="headerlink" title="初めに"></a>初めに</h2><p>Windows10を使っていて，突然動作しなくなったりクラッシュが発生することがあります。<br>そんな時の為に，Windowsにはシステムファイルをチェック・修復するツール「SFC.exe」があります。<br>それを使うにはコマンドプロンプトかPowerShellでコマンドを叩いてやると楽です。<br>ただ，いくつか注意点などあるしいちいちコマンドを覚えるのも面倒なので，備忘録として記事に残しておきます。</p><span id="more"></span><!--toc--><h2 id="「DISM-exe」と「sfc-x2F-scannow」，「chkedsk」"><a href="#「DISM-exe」と「sfc-x2F-scannow」，「chkedsk」" class="headerlink" title="「DISM.exe」と「sfc &#x2F;scannow」，「chkedsk」"></a>「DISM.exe」と「sfc &#x2F;scannow」，「chkedsk」</h2><p>Windows7の頃までは <strong>「sfc &#x2F;scannow」</strong> が有名でしたが，Win8.1以降には <strong>「DISM.exe」</strong> というのが加わったようです。<br>この二つの違いは <em>「DISM.exe」はWindowsのシステムイメージの破損の確認と修復を、「sfc &#x2F;scannow」は保護されているすべてのシステムファイルをスキャンして破損したファイルがあった場合は「C:\Windows\System32\dllcache」の圧縮フォルダにあるキャッシュコピーから復元します。</em></p><p><strong>実行順は「DISM.exe」から始め，それでも不安定なら「sfc &#x2F;scannow」を実行します。</strong></p><h2 id="「DISM-exe」の実行方法"><a href="#「DISM-exe」の実行方法" class="headerlink" title="「DISM.exe」の実行方法"></a>「DISM.exe」の実行方法</h2><p>まずは，管理者権限でPowerShellを起動します。<br>スタートアイコンを右クリックして出てきたメニューからWindows PowerShell(管理者)(A)というのをクリックします。<br>すると，PowerShellが管理者権限付きで起動します。(途中で警告がでたら「はい」を選びます)。<br>そしたら，</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DISM.exe /Online /Cleanup-image /Restorehealth</span><br></pre></td></tr></table></figure><p>と入力してEnterキーを押すとDISM.exeがスタートします。<br>ステータスが100％になるまで待ちます。<br>時間はケース・バイ・ケースですが，おおよそ15分～1時間位は覚悟しましょう。<br>「操作は正常に完了しました。」と表示されれば終了です。</p><h3 id="DISM-exeのオプション"><a href="#DISM-exeのオプション" class="headerlink" title="DISM.exeのオプション"></a>DISM.exeのオプション</h3><p>先ほど叩いたコマンドのうち「&#x2F;」以降はオプション指定です。<br>とは言え「&#x2F;?」を叩けばオプションの簡単な説明が出てきます。<br>さらに詳しく見たいオプションがあれば，そのオプション後に「&#x2F;?」を叩けば説明が表示されます。</p><div class="figure " style="width:100%;"><a class="fancybox" href="help.png" title="DISM のヘルプ" data-caption="DISM のヘルプ" data-fancybox="console"><img class="fig-img" src="help.png" style="width:100%;height:100%;"alt="DISM のヘルプ"></a><span class="caption">DISM のヘルプ</span></div><div style="clear:both;"></div><h2 id="「sfc-x2F-scannow」の実行方法"><a href="#「sfc-x2F-scannow」の実行方法" class="headerlink" title="「sfc &#x2F;scannow」の実行方法"></a>「sfc &#x2F;scannow」の実行方法</h2><p>DISM.exeを実行しても不安定なら，「sfc &#x2F;scannow」を実行します。<br>実行法はDISM.exeと同じように管理者権限付きのPowerShellを起動してコマンドを叩くだけです。<br>例によって100%になるまで待ちます。</p><span class="highlight-text success">「Windowsリソース保護は、整合性違反を検出しませんでした。」</span><p>と表示されれば問題ありません。<br>もし</p><span class="highlight-text success">「破損したファイルを検出し、正常に修復しました。」</span><p>と表示された場合は，修復されたので問題ありません。Windowsを再起動しましょう。</p><span class="highlight-text danger">「Windows リソース保護は要求された操作を実行できませんでした。」</span><p>と表示されたら，Windowsのセーフモードで立ち上げて%WinDir%\WinSxS\Temp の下に PendingDeletes フォルダーと PendingRenames フォルダーが存在することを確認します。<br>このファイルが何なのかはよくわかりません。まぁ，あってもなくても「sfc &#x2F;scannow」を試してみましょう。</p><span class="highlight-text danger">「Windows リソース保護は、破損したファイルを検出しましたが、その一部を修正できませんでした。 詳細は CBS.Log (%WinDir%\Logs\CBS\CBS.log) にあります。」</span><p>と出たら修復失敗です。<br>logファイルなんて見ても分かりませんので「sfc &#x2F;scannow」での回復は諦めましょう。</p><h2 id="「chkdsk」"><a href="#「chkdsk」" class="headerlink" title="「chkdsk」"></a>「chkdsk」</h2><p>こちらは，ディスクのエラーを確認するためのコマンドです。(因みに，ドライブを右クリックで出てくるオプションからでも実行できます。)<br>ただ「chkdsk」はオプションを指定せずに実行すると、一切の修復作業を行いません。エラーがあるかを確認するだけです。<br>オプションには以下のものがあります。</p><div class="alert warning"><p>&#x2F;fファイルシステムを修復する。<br>あくまでもソフトウェア的な修復で、ハードディスクのセクタチェックは行わない。<br>最も使用頻度の高いオプション。</p></div><div class="alert warning"><p>&#x2F;r不良セクタを検出し、不良クラスタから読み出し可能なデータは回収する。<br>また、「&#x2F;f」のオプションを包括する。<br>領域内の全セクタをチェックするため、非常に時間がかかる。<br>読めないデータはそのまま失われるので、過信は禁物。  </p></div><div class="alert warning"><p>&#x2F;bファイルシステムに登録されている不良クラスタをチェックし直す。<br>また、「&#x2F;r」のオプションを包括する。  </p></div><p>ということなので，通常は「&#x2F;f」オプションをつけて実行します。<br>ただ，checkdskはドライブに大きな負荷をかけることになります。<br>因みに，最近主流になり始めているSSDには効果が無いという情報がちらほら見かけます。<br>その反面，しつこく何回か叩いたら回復したという情報も。<br>自分ではまだここまで試すエラーが出てないので，真相はわかりません。残念。</p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>Windowsの調子が悪い時は</p><div class="alert info"><ol><li>「Windows PowerShell」を管理者権限で起動</li><li>DISM.exe &#x2F;Online &#x2F;Cleanup-image &#x2F;Restorehealth を実行</li><li>sfc &#x2F;scannow を実行</li><li>chkdsk &#x2F;fを試す。ダメ元で&#x2F;rを叩きまくる。</li></ol></div><p>と，こんな感じになるかと思います。<br>以上，Windowsの調子が悪い時に試すコマンドの紹介でした。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://onoredekaiketsu.com/repair-windows-with-dism-and-sfc-scannow/">「己で解決！泣かぬなら己で鳴こうホトトギス」 DISM.exeとsfc &#x2F;scannowでWindowsを修復する</a></p></li><li><p><a href="https://support.microsoft.com/ja-jp/help/929833/use-the-system-file-checker-tool-to-repair-missing-or-corrupted-system">「Windowsのサポート」 システム ファイル チェッカー ツールを使用して不足または破損しているシステム ファイルを修復する</a></p></li><li><p><a href="https://qiita.com/ryotuxtuki/items/884e8430b11e33f07b61">SSDに不良ブロックができても諦めてはいけない件</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;初めに&quot;&gt;&lt;a href=&quot;#初めに&quot; class=&quot;headerlink&quot; title=&quot;初めに&quot;&gt;&lt;/a&gt;初めに&lt;/h2&gt;&lt;p&gt;Windows10を使っていて，突然動作しなくなったりクラッシュが発生することがあります。&lt;br&gt;そんな時の為に，Windowsにはシステムファイルをチェック・修復するツール「SFC.exe」があります。&lt;br&gt;それを使うにはコマンドプロンプトかPowerShellでコマンドを叩いてやると楽です。&lt;br&gt;ただ，いくつか注意点などあるしいちいちコマンドを覚えるのも面倒なので，備忘録として記事に残しておきます。&lt;/p&gt;</summary>
    
    
    
    <category term="コンピューター" scheme="https://demskiautio.github.io/demski/categories/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC/"/>
    
    <category term="Windows10" scheme="https://demskiautio.github.io/demski/categories/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC/Windows10/"/>
    
    <category term="回復" scheme="https://demskiautio.github.io/demski/categories/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC/Windows10/%E5%9B%9E%E5%BE%A9/"/>
    
    
    <category term="Windows10" scheme="https://demskiautio.github.io/demski/tags/Windows10/"/>
    
    <category term="PowerShell" scheme="https://demskiautio.github.io/demski/tags/PowerShell/"/>
    
    <category term="回復" scheme="https://demskiautio.github.io/demski/tags/%E5%9B%9E%E5%BE%A9/"/>
    
    <category term="コマンドプロンプト" scheme="https://demskiautio.github.io/demski/tags/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%97%E3%83%AD%E3%83%B3%E3%83%97%E3%83%88/"/>
    
  </entry>
  
  <entry>
    <title>EditorConfigの使い方</title>
    <link href="https://demskiautio.github.io/demski/2019/06/08/editor-config/"/>
    <id>https://demskiautio.github.io/demski/2019/06/08/editor-config/</id>
    <published>2019-06-08T06:34:08.000Z</published>
    <updated>2019-06-12T10:20:31.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初めに"><a href="#初めに" class="headerlink" title="初めに"></a>初めに</h2><p>EditorConfigは，コーディング規則を各自が使うエディタ間で統一するのに役立つツールです。<br>コーディングすると時に，インデントの数や改行の位置，「,」を文末にするか文頭にするか等，色々なコーディング規約が提案[^1] されています。<br>しかし，チームでコーディグする場合，経験や好みによって個々人が好きな書き方をしてしまい，複数のルールが混在することになります。<br>それを防ぐ手段として，なかなか便利なので，メモがてら<a href="https://editorconfig.org/">公式ページ</a>を翻訳・要約記事にしてみました。</p><p>[^1]:  <a href="https://google.github.io/styleguide/htmlcssguide.html">google HTML&#x2F;CSS Style Guid</a>  <a href="https://www.w3schools.com/html/html5_syntax.asp">w3schools</a> ,  <a href="http://met.hanatoweb.jp/guideline/html5/">hanatoweb</a> など。</p><span id="more"></span><!-- toc --><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>以下は、.editorconfigPythonおよびJavaScriptファイルの行末およびインデントスタイルを設定するファイルの例です。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 公式ページのURL: https://EditorConfig.org</span><br><span class="line"></span><br><span class="line"># 一番上のEditorConfig</span><br><span class="line">root = true</span><br><span class="line"></span><br><span class="line"># 各ファイルの最後に改行が付いた、Unixスタイルの改行</span><br><span class="line">[*]</span><br><span class="line">end_of_line = lf</span><br><span class="line">insert_final_newline = true</span><br><span class="line"></span><br><span class="line"># Matches multiple files with brace expansion notation</span><br><span class="line"># Set default charset</span><br><span class="line">[*.&#123;js,py&#125;]</span><br><span class="line">charset = utf-8</span><br><span class="line"></span><br><span class="line"># 字下げ</span><br><span class="line">[*.py]</span><br><span class="line">indent_style = space</span><br><span class="line">indent_size = 4</span><br><span class="line"></span><br><span class="line"># タブのインデント (no size specified)</span><br><span class="line">[Makefile]</span><br><span class="line">indent_style = tab</span><br><span class="line"></span><br><span class="line"># Iibディレクトリ配下のすべてのJSに対するインデントの上書き</span><br><span class="line">[lib/**.js]</span><br><span class="line">indent_style = space</span><br><span class="line">indent_size = 2</span><br><span class="line"></span><br><span class="line"># 正確なファイルはpackage.jsonまたは.travis.ymlのどちらかと一致します。</span><br><span class="line">[&#123;package.json,.travis.yml&#125;]</span><br><span class="line">indent_style = space</span><br><span class="line">indent_size = 2</span><br></pre></td></tr></table></figure><p>これらの内容を「.editorconfig 」ファイルとして保存する。<br>Windowsで冒頭が「.」のファイルを作るには<span class="highlight-text green">「.ファイル名.」</span>のように，冒頭と末尾に「.(ピリオド)」を打つ。</p><h2 id="editorconfigファイルの位置"><a href="#editorconfigファイルの位置" class="headerlink" title=".editorconfigファイルの位置"></a>.editorconfigファイルの位置</h2><p>基本的にはプロジェクトのルートに置けばよい。<br>EditorConfigは,上から下に読み上げられ，見つかった規則から優先して適用されます。<br>設定ファイルは，大文字と小文字を区別せず，「&#x2F;(スラッシュ)」のみが使用でき，コメントはoctothorpes（#）またはセミコロン（;）が使用できる。<br>コメントは行ごとに書き，文字エンコードはUTF-8出なければならない。区切り行はCRLFもしくはLFが使われる。</p><p>ファイルパスグロブパターンと現在サポートされているEditorConfigプロパティを以下に説明します。</p><h3 id="ワイルドカードパターン"><a href="#ワイルドカードパターン" class="headerlink" title="ワイルドカードパターン"></a>ワイルドカードパターン</h3><p>ワイルドカードマッチングのためにセクション名で認識される特殊文字</p><table><thead><tr><th>ワイルドカード</th><th>意味</th></tr></thead><tbody><tr><td>*</td><td>パス区切り文字（&#x2F;）を除く、任意の文字列と一致します。</td></tr><tr><td>**</td><td>任意の文字列に一致</td></tr><tr><td>？</td><td>任意の位置文字に一致</td></tr><tr><td>[name]</td><td>名前の任意の1文字に一致</td></tr><tr><td>[!name]</td><td>名前に含まれていない任意の1文字に一致</td></tr><tr><td>[s1,s2,s3]</td><td>指定された任意の文字列(コマンドで区切られている)に一致します</td></tr><tr><td>[num1..num2]</td><td>num1とnum2の間の任意の整数と一致します。ここで、num1とnum2は、正または負のいずれかです。</td></tr></tbody></table><p>特殊文字はバックスラッシュでエスケープすることができるので、それらはワイルドカードパターンとして解釈されません。</p><h3 id="サポートされているプロパティ"><a href="#サポートされているプロパティ" class="headerlink" title="サポートされているプロパティ"></a>サポートされているプロパティ</h3><p>詳しいリストは<a href="https://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties">ウィキ</a>を参考の事。<br>主なプロパティは以下のようなものがある。</p><ul><li><p>indent_style：ハードタブまたはソフトタブをそれぞれ使用するには、タブまたはスペースに設定します。</p></li><li><p>indent_size：各インデントレベルに使用される列数とソフトタブの幅を定義する整数（サポートされている場合）。tabに設定すると、tab_width（指定されていれば）の値が使用されます。</p></li><li><p>end_of_line：改行の表現方法を制御するには、lf、cr、またはcrlfに設定します。</p></li><li><p>charset：latin1、utf-8、utf-8-bom、utf-16beまたはutf-16leに設定して文字セットを制御します。utf-8推奨</p></li><li><p>trim_trailing_whitespace：改行文字の前の空白文字を削除するにはtrueに設定し、そうでないことを保証するにはfalseに設定します</p></li><li><p>nsert_final_newline：保存時にファイルが改行で終わっていることを確認するにはtrueに、そうでないことを確認するにはfalseに設定します。</p></li><li><p>rootセクションの外側のファイルの先頭に指定する必要がある特殊なプロパティ。現在のファイルでファイル検索を停止するには、trueに設定し.editorconfigます。</p></li></ul><p>プロパティとその値は，すべて小文字で解釈されます。<br>プロパティが指定されていない場合はエディタと標準設定が使用されます。<br>必要な項目のプロパティのみ設定し，それ以外の多くは未設定のままにしておくことが推奨されています。</p><h2 id="終わりに"><a href="#終わりに" class="headerlink" title="終わりに"></a>終わりに</h2><p>ざっと公式ページを翻訳・要約してみました。<br>テキストファイルに必要な設定だけ書けば，別のエディタ間でも設定を共有できるのは嬉しいですね。<br>チーム開発で決まった規約が気に入らなかった場合は，チームの規約をEditorConfigに記述し，コーディング時は自分の好きな設定で書いて，提出するときにEditorConfigで成形すればよさそうです。</p><h2 id="参考HP"><a href="#参考HP" class="headerlink" title="参考HP"></a>参考HP</h2><p><a href="https://editorconfig.org/">EditorConfig公式</a><br><a href="https://github.com/editorconfig/">公式GitHub</a><br><a href="https://twitter.com/EditorConfig">公式Twitter</a><br><a href="https://github.com/editorconfig/editorconfig/wiki/Projects-Using-EditorConfig">公式Wikiのプロジェクトリスト</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;初めに&quot;&gt;&lt;a href=&quot;#初めに&quot; class=&quot;headerlink&quot; title=&quot;初めに&quot;&gt;&lt;/a&gt;初めに&lt;/h2&gt;&lt;p&gt;EditorConfigは，コーディング規則を各自が使うエディタ間で統一するのに役立つツールです。&lt;br&gt;コーディングすると時に，インデントの数や改行の位置，「,」を文末にするか文頭にするか等，色々なコーディング規約が提案[^1] されています。&lt;br&gt;しかし，チームでコーディグする場合，経験や好みによって個々人が好きな書き方をしてしまい，複数のルールが混在することになります。&lt;br&gt;それを防ぐ手段として，なかなか便利なので，メモがてら&lt;a href=&quot;https://editorconfig.org/&quot;&gt;公式ページ&lt;/a&gt;を翻訳・要約記事にしてみました。&lt;/p&gt;
&lt;p&gt;[^1]:  &lt;a href=&quot;https://google.github.io/styleguide/htmlcssguide.html&quot;&gt;google HTML&amp;#x2F;CSS Style Guid&lt;/a&gt;  &lt;a href=&quot;https://www.w3schools.com/html/html5_syntax.asp&quot;&gt;w3schools&lt;/a&gt; ,  &lt;a href=&quot;http://met.hanatoweb.jp/guideline/html5/&quot;&gt;hanatoweb&lt;/a&gt; など。&lt;/p&gt;</summary>
    
    
    
    <category term="ホームページ作成" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/"/>
    
    <category term="ツール" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/%E3%83%84%E3%83%BC%E3%83%AB/"/>
    
    <category term="EditorConfig" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/%E3%83%84%E3%83%BC%E3%83%AB/EditorConfig/"/>
    
    <category term="Web開発" scheme="https://demskiautio.github.io/demski/categories/Web%E9%96%8B%E7%99%BA/"/>
    
    <category term="チーム開発" scheme="https://demskiautio.github.io/demski/categories/Web%E9%96%8B%E7%99%BA/%E3%83%81%E3%83%BC%E3%83%A0%E9%96%8B%E7%99%BA/"/>
    
    
    <category term="プログラミング" scheme="https://demskiautio.github.io/demski/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
    <category term="ツール" scheme="https://demskiautio.github.io/demski/tags/%E3%83%84%E3%83%BC%E3%83%AB/"/>
    
    <category term="コーディング" scheme="https://demskiautio.github.io/demski/tags/%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0/"/>
    
    <category term="チーム開発" scheme="https://demskiautio.github.io/demski/tags/%E3%83%81%E3%83%BC%E3%83%A0%E9%96%8B%E7%99%BA/"/>
    
    <category term="EditorConfig" scheme="https://demskiautio.github.io/demski/tags/EditorConfig/"/>
    
  </entry>
  
  <entry>
    <title>HTML5 Boilerplate入門</title>
    <link href="https://demskiautio.github.io/demski/2019/05/25/html5boilerplate-1/"/>
    <id>https://demskiautio.github.io/demski/2019/05/25/html5boilerplate-1/</id>
    <published>2019-05-25T04:46:56.000Z</published>
    <updated>2022-10-03T01:57:20.036Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初めに"><a href="#初めに" class="headerlink" title="初めに"></a>初めに</h1><p>HTML5 Boilerplateは，必要なファイル一式が詰まったHTML5フレームワークです。<br>チームでの開発では，ファイル構造，基本的な命名規則，使用するライブラリーなどを共有することが多々あります。<br>その一つの回答として，いくつものフレームワークが提案されています。<br>HTML5 Boilerplateはその中でも割と古参のフレームワークであり，カスタマイズ性に優れているとされています。<br>このページでは，一通り作成準備を終わらせるまでを記録します。</p><span id="more"></span><!--toc--><h2 id="一式をダウンロード"><a href="#一式をダウンロード" class="headerlink" title="一式をダウンロード"></a>一式をダウンロード</h2><p>まずは，<a href="https://html5boilerplate.com/" title="HTML5 Boilerplate">公式ページ</a>にアクセスします。<br>中央のDownloadボタンを押せば最新のファイル一式がダウンロードできます。  </p><div class="figure fig-25" style="width:100%;"><a class="fancybox" href="html5boilerplatehome.png" title="Html5Boilerplate公式ページ" data-caption="Html5Boilerplate公式ページ" data-fancybox="default"><img class="fig-img" src="html5boilerplatehome.png" style="width:100%;height:100%;"alt="Html5Boilerplate公式ページ"></a><span class="caption">Html5Boilerplate公式ページ</span></div><div style="clear:both;"></div><p>なお，</p><figure class="highlight plaintext"><figcaption><span>npm [lang:console]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i html5-boilerplate --save</span><br></pre></td></tr></table></figure><p>で,パッケージマネージャーのnpmでローカルインソールできます。</p><h2 id="解凍"><a href="#解凍" class="headerlink" title="解凍"></a>解凍</h2><p>zipファイルで落ちてくるので，何も考えず解凍します。<br>すると，下記のファイル群が出てきます。</p><div class="figure fig-25" style="width:100%;"><a class="fancybox" href="capture1.PNG" title="Html5Boilerplatehome一式" data-caption="Html5Boilerplatehome一式" data-fancybox="default"><img class="fig-img" src="capture1.PNG" style="width:100%;height:100%;"alt="Html5Boilerplatehome一式"></a><span class="caption">Html5Boilerplatehome一式</span></div><div style="clear:both;"></div>  <p>あらゆるページが構築できるよう，ツールやCSS・Javascriptなど多くのファイルが含まれています。<br>一つのプロジェクトで全てを使うことはないので，この中から必要なモノを取捨選択していくことになります。<br>公式も「Delete キー歓迎」だそうですｗ</p><h2 id="ピックアップ"><a href="#ピックアップ" class="headerlink" title="ピックアップ"></a>ピックアップ</h2><p>静的なホームページ構築に必要そうなファイルをピックアップします。</p><ol><li><p><a href="https://editorconfig.org/">.editorconfig</a>…各エディタごとに共通のコーディングさせるためのツール。</p></li><li><p><a href="http://humanstxt.org/JA">humans.txt</a>…制作者を明示的にするためのファイル？</p></li><li><p><a href="http://www.robotstxt.org/">robots.txt</a>…検索エンジンのクローラー（ロボット）のWEBページのへのアクセスを制限するためのファイルで、ロボットに向けた命令文（アクセスを許可&#x2F;許可しない）を記述します</p></li><li><p><a href="https://developer.mozilla.org/ja/docs/Web/Manifest">site.webmanifest</a>…ウェブマニフェスト。オフライン作業やプッシュ通知の受け取りなどのその他の可能性を持ったウェブサイトを構築できる。</p></li></ol><h2 id="ビルド"><a href="#ビルド" class="headerlink" title="ビルド"></a>ビルド</h2><p>ビルドとはWebページのパフォーマンス(読み込み速度など)を上げるため，HTML・CSS・JavaScriptなどの空白を削除する事。<br>HTML5 BoilerplateではのANT ビルド・スクリプトが含まれています。  </p><p>ビルドによって  </p><blockquote><ul><li>YUI Compressor によって JavaScript を組み合わせ、縮小化します。</li><li>CSS を組み合わせ、縮小化します。</li><li>jpegtran と optipng によって JPG ファイルと PNG ファイルを最適化します。</li><li>開発専用のコードを削除します。</li><li>htmlcompressor を使って HTML を縮小化し、構成します。</li><li>インテリジェントなキャッシングを行えるように、ファイル名を変更します (具体的には、更新されたファイルのキャッシュを破棄します)。</li></ul></blockquote><p>とのこと。<br>ANTについては別記事に。</p><h2 id="余分な豆知識"><a href="#余分な豆知識" class="headerlink" title="余分な豆知識"></a>余分な豆知識</h2><p>Boilerplateは定型文という意味。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.ibm.com/developerworks/jp/web/library/wa-html5boilerplate/index.html">HTML5 Boilerplate を使用して Web 開発を容易に始める byIBM</a><br><a href="https://github.com/h5bp/html5-boilerplate">HTML5 BoilerplateのGitHubページ</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;初めに&quot;&gt;&lt;a href=&quot;#初めに&quot; class=&quot;headerlink&quot; title=&quot;初めに&quot;&gt;&lt;/a&gt;初めに&lt;/h1&gt;&lt;p&gt;HTML5 Boilerplateは，必要なファイル一式が詰まったHTML5フレームワークです。&lt;br&gt;チームでの開発では，ファイル構造，基本的な命名規則，使用するライブラリーなどを共有することが多々あります。&lt;br&gt;その一つの回答として，いくつものフレームワークが提案されています。&lt;br&gt;HTML5 Boilerplateはその中でも割と古参のフレームワークであり，カスタマイズ性に優れているとされています。&lt;br&gt;このページでは，一通り作成準備を終わらせるまでを記録します。&lt;/p&gt;</summary>
    
    
    
    <category term="ホームページ作成" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/"/>
    
    <category term="ツール" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/%E3%83%84%E3%83%BC%E3%83%AB/"/>
    
    <category term="HTML5/CSS3" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/HTML5-CSS3/"/>
    
    <category term="HTML5 Boilerplate" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/%E3%83%84%E3%83%BC%E3%83%AB/HTML5-Boilerplate/"/>
    
    
    <category term="HTML5" scheme="https://demskiautio.github.io/demski/tags/HTML5/"/>
    
    <category term="コーディング" scheme="https://demskiautio.github.io/demski/tags/%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0/"/>
    
    <category term="Html5Boilerplate" scheme="https://demskiautio.github.io/demski/tags/Html5Boilerplate/"/>
    
    <category term="CSS3" scheme="https://demskiautio.github.io/demski/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>Windos10 ショートカットキー</title>
    <link href="https://demskiautio.github.io/demski/2019/05/24/windos10-tips/"/>
    <id>https://demskiautio.github.io/demski/2019/05/24/windos10-tips/</id>
    <published>2019-05-24T10:25:24.000Z</published>
    <updated>2019-10-15T07:32:00.756Z</updated>
    
    <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>最近，マウスよりキーボードだけで色々済ませたほうが楽なことに気付いた。<br>記憶力が乏しいので，よく使いそうなものからメモ。(但し，知ってるのは省略（Ctrl + Cとか）)</p><span id="more"></span><!-- toc --><h3 id="よく使いそうなキー"><a href="#よく使いそうなキー" class="headerlink" title="よく使いそうなキー"></a>よく使いそうなキー</h3><p>Alt系のショートカットキーはあまり知らなかったな。<br>あと，Windowsキーが邪魔者扱いから便利ボタンに変わるってのはうれしいなｗ</p><table><thead><tr><th align="left">キー</th><th align="center">動作</th></tr></thead><tbody><tr><td align="left">Alt + Tab</td><td align="center">開いているアプリを切り替える</td></tr><tr><td align="left">Alt + F4</td><td align="center">アクティブなアイテムを閉じる，またはアクティブなアプリを終了する</td></tr><tr><td align="left">Alt + Tab</td><td align="center">開いているアプリを切り替える</td></tr><tr><td align="left">Alt + Esc</td><td align="center">アイテムを開かれた順序で順番に切り替える</td></tr><tr><td align="left">Alt + Enter</td><td align="center">選択したアイテムのプロパティを表示す</td></tr><tr><td align="left">Alt + ← or Alt + →</td><td align="center">前に戻る or 次に進む</td></tr><tr><td align="left">Alt + PageUp or Alt + PageDown</td><td align="center">1 画面上へ移動する or 1 画面下へ移動する</td></tr><tr><td align="left">F3</td><td align="center">エクスプローラーでファイルまたはフォルダーを検索する</td></tr><tr><td align="left">F4</td><td align="center">エクスプローラーでアドレス バーの一覧を表示する</td></tr><tr><td align="left">F5</td><td align="center">作業中のウィンドウを最新の情報に更新する</td></tr><tr><td align="left">F6</td><td align="center">ウィンドウ内またはデスクトップ上の画面要素を順番に切り替える</td></tr><tr><td align="left">F10</td><td align="center">アクティブなアプリのメニュー バーをアクティブにする</td></tr><tr><td align="left">Ctrl + F4</td><td align="center">作業中のドキュメントを閉じる (複数のドキュメントを同時に開くことができる全画面表示のアプリで)</td></tr><tr><td align="left">Ctrl + A</td><td align="center">ドキュメント内またはウィンドウ内のすべてのアイテムを選択する</td></tr><tr><td align="left">Ctrl + R</td><td align="center">作業中のウィンドウを最新の情報に更新する(F5と同等))</td></tr><tr><td align="left">Ctrl + →</td><td align="center">次の単語の先頭にカーソルを移動する</td></tr><tr><td align="left">Ctrl + ←</td><td align="center">前の単語の先頭にカーソルを移動する</td></tr><tr><td align="left">Ctrl + ↓</td><td align="center">次の段落の先頭にカーソルを移動する</td></tr><tr><td align="left">Ctrl + ↑</td><td align="center">前の段落の先頭にカーソルを移動する</td></tr><tr><td align="left">Ctrl + Alt + Tab</td><td align="center">方向キーを使って，開いているすべてのアプリ間で切り替える</td></tr><tr><td align="left">Ctrl + Alt + Shift + 方向キー</td><td align="center">スタート メニュー内でフォーカスされているグループまたはタイルを指定した方向に移動します。</td></tr><tr><td align="left">Ctrl + 方向キー (アイテムに移動する) + Space</td><td align="center">ウィンドウ内またはデスクトップ上の複数のアイテムを個別に選択する</td></tr><tr><td align="left">Ctrl + Shift + 方向キー</td><td align="center">テキストのブロックを選択する</td></tr><tr><td align="left">Ctrl + Esc</td><td align="center">スタート メニューを開く</td></tr><tr><td align="left">Ctrl + Shift + Esc</td><td align="center">タスク マネージャーを開く</td></tr><tr><td align="left">Ctrl + Shift</td><td align="center">キーボード レイアウトを切り替える (複数のキーボード レイアウトが使用可能になっている場合)</td></tr><tr><td align="left">Windows ロゴ キー + D</td><td align="center">デスクトップを表示または非表示にする</td></tr><tr><td align="left">Windows ロゴ キー + Ctrl + D</td><td align="center">仮想デスクトップを追加する</td></tr><tr><td align="left">Windows ロゴ キー + E</td><td align="center">エクスプローラーを開く</td></tr><tr><td align="left">Windows ロゴ キー + L</td><td align="center">PC をロックする，またはアカウントを切り替える</td></tr><tr><td align="left">Windows ロゴ キー + M</td><td align="center">すべてのウィンドウを最小化する</td></tr><tr><td align="left">Windows ロゴ キー + T</td><td align="center">タスク バー上のアプリを順番に切り替える</td></tr><tr><td align="left">Windows ロゴ キー + X</td><td align="center">[クイック リンク] メニューを開く</td></tr><tr><td align="left">Windows ロゴ キー + Tab</td><td align="center">タスク ビューを開く</td></tr><tr><td align="left">Windows ロゴ キー + 矢印キー</td><td align="center">グリッドに分割</td></tr></tbody></table><h3 id="エクスプローラのショートカット"><a href="#エクスプローラのショートカット" class="headerlink" title="エクスプローラのショートカット"></a>エクスプローラのショートカット</h3><table><thead><tr><th align="left">キー</th><th align="center">動作</th></tr></thead><tbody><tr><td align="left">Alt + D</td><td align="center">アドレス バーを選択する</td></tr><tr><td align="left">Ctrl + E</td><td align="center">検索ボックスを選択する</td></tr><tr><td align="left">Ctrl + F</td><td align="center">検索ボックスを選択する</td></tr><tr><td align="left">Ctrl + N</td><td align="center">新しいウィンドウを開く</td></tr><tr><td align="left">Ctrl + W</td><td align="center">現在のウィンドウを閉じる</td></tr><tr><td align="left">Ctrl + マウスのスクロール ホイール</td><td align="center">ファイル アイコンとフォルダー アイコンのサイズおよび外観を変更する</td></tr><tr><td align="left">Ctrl + Shift + E</td><td align="center">選択したフォルダーの上のフォルダーをすべて表示する</td></tr><tr><td align="left">Ctrl + Shift + N</td><td align="center">新しいフォルダーを作成する</td></tr><tr><td align="left">NumLock + アスタリスク (*)</td><td align="center">選択したフォルダーの下のサブフォルダーをすべて表示する</td></tr><tr><td align="left">NumLock + 正符号 (+)</td><td align="center">選択したフォルダーの内容を表示する</td></tr><tr><td align="left">NumLock + 負符号 (-)</td><td align="center">選択したフォルダーを折りたたむ</td></tr><tr><td align="left">Alt + P</td><td align="center">プレビュー ウィンドウを表示する</td></tr><tr><td align="left">Alt + Enter</td><td align="center">選択したアイテムの [プロパティ] ダイアログ ボックスを開く</td></tr><tr><td align="left">Alt + →</td><td align="center">次のフォルダーを表示する</td></tr><tr><td align="left">Alt + ↑</td><td align="center">フォルダーの親フォルダーを表示する</td></tr><tr><td align="left">Alt + ←</td><td align="center">前のフォルダーを表示する</td></tr><tr><td align="left">BackSpace</td><td align="center">前のフォルダーを表示する</td></tr><tr><td align="left">→</td><td align="center">現在の選択を表示する (折りたたまれている場合)，または最初のサブフォルダーを選択する</td></tr><tr><td align="left">←</td><td align="center">現在の選択を折りたたむ (展開されている場合)，またはフォルダーの親フォルダーを選択する</td></tr><tr><td align="left">End</td><td align="center">作業中のウィンドウの一番下を表示する</td></tr><tr><td align="left">Home</td><td align="center">作業中のウィンドウの一番上を表示する</td></tr><tr><td align="left">F11</td><td align="center">作業中のウィンドウを最大化または最小化する</td></tr></tbody></table><h3 id="おまけ"><a href="#おまけ" class="headerlink" title="おまけ"></a>おまけ</h3><p>Windows10デュアルディスプレイの壁紙を別々に設定する方法</p><p>エクスプローラに</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">control /name Microsoft.Personalization /page pageWallpaper</span><br></pre></td></tr></table></figure><p>と打つ。</p><h3 id="おまけ２"><a href="#おまけ２" class="headerlink" title="おまけ２"></a>おまけ２</h3><p>2019-10-15追記<br>Windows10の付箋（Sticky Notes）の起動方法と使い方  </p><p>タスクバーを右クリックします。</p><p>［Windows Ink ワークスペースボタンを表示］をクリックしてチェックをオンにします。</p><p>既定ではオフになっています。<br>まぁ、改めて記事書きます。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;最近，マウスよりキーボードだけで色々済ませたほうが楽なことに気付いた。&lt;br&gt;記憶力が乏しいので，よく使いそうなものからメモ。(但し，知ってるのは省略（Ctrl + Cとか）)&lt;/p&gt;</summary>
    
    
    
    <category term="Windos" scheme="https://demskiautio.github.io/demski/categories/Windos/"/>
    
    <category term="Windos10" scheme="https://demskiautio.github.io/demski/categories/Windos/Windos10/"/>
    
    
    <category term="Windows10" scheme="https://demskiautio.github.io/demski/tags/Windows10/"/>
    
    <category term="OS" scheme="https://demskiautio.github.io/demski/tags/OS/"/>
    
    <category term="ショートカットキー" scheme="https://demskiautio.github.io/demski/tags/%E3%82%B7%E3%83%A7%E3%83%BC%E3%83%88%E3%82%AB%E3%83%83%E3%83%88%E3%82%AD%E3%83%BC/"/>
    
    <category term="チートシート" scheme="https://demskiautio.github.io/demski/tags/%E3%83%81%E3%83%BC%E3%83%88%E3%82%B7%E3%83%BC%E3%83%88/"/>
    
  </entry>
  
  <entry>
    <title>Css-tips1</title>
    <link href="https://demskiautio.github.io/demski/2019/04/24/css-tips1/"/>
    <id>https://demskiautio.github.io/demski/2019/04/24/css-tips1/</id>
    <published>2019-04-24T08:44:16.000Z</published>
    <updated>2020-05-26T13:51:49.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>わかったつもりで実は分かってなかったHTML５の基礎知識を纏めたメモ。<br>今回は，結構罠に嵌まる確率が高いmargin・paddingについてまとめてみた。</p><span id="more"></span><!--toc--><h2 id="ボックスモデル"><a href="#ボックスモデル" class="headerlink" title="ボックスモデル"></a>ボックスモデル</h2><p>HTML5と言うと，HTMLのバージョンとしてのHTML5(狭い意味)と，Javascriptを初めとしたWeb技術としてのHTML5(広い意味)がある。<br>今回は前者の意味でHTML5という言葉を用いている。<br>というのも，HTML5ではセマンティクスの観点からHTMLは文章構造・意味を表すのを担い，デザイン部分はCSS3(以下CSS)が担うという風に，明確に区別が定義されるようになった。(らしい…)<br>ボックスモデルは文章の構造・意味的な部分よりもデザイン的な部分が大きい為，CSSが担うことになった。<br>その事を端的に表しているのが「display」プロパティ。<br>この要素は[ブロック・インライン等の、要素の表示形式を指定する際に使用」される。<br>つまり，HTML5の殆どのタグが，自由にブロック・インラインどちらかのボックスに変えることが出来る。<br><a href="http://www.d-toybox.com/spec/CSS3/box/index.html#L706">http://www.d-toybox.com/spec/CSS3/box/index.html#L706</a></p><p>ただ，ブラウザの仕様上，特に指定がない場合はHTML4時代の名残としてp要素はブロックレベルでa要素はインラインレベルでというように(ブラウザが判断して)表示されるようです。</p><h2 id="ボックスモデル配置の大前提"><a href="#ボックスモデル配置の大前提" class="headerlink" title="ボックスモデル配置の大前提"></a>ボックスモデル配置の大前提</h2><h3 id="ボックスの構成要素"><a href="#ボックスの構成要素" class="headerlink" title="ボックスの構成要素"></a>ボックスの構成要素</h3><p>要素が宣言されると，ブラウザは次の部品を構成する。</p><ul><li>内容（コンテンツ）</li><li>ボーダー（border）</li><li>内容とボーダーの間の余白（padding）</li><li>ボーダーと他のボックスとの間の余白（margin）</li></ul><p>これは，ブロック・インラインともに共通している。<br>但し，インライン要素の場合は，width や height，上下の margin は効かない。<br>これは，インライン要素はあくまでも内容の中の一部に過ぎないから</p><h3 id="包含ブロック"><a href="#包含ブロック" class="headerlink" title="包含ブロック"></a>包含ブロック</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        hoge</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>  <p>内容の配置は，親要素のpaddingの内側になる。<br>上記の例だと，p要素はdiv要素のpaddingの内側になる。<br>そして、p要素の内容であるhogeは，p要素のpaddingの内側となる。<br>このpaddingの内側は，「包含プロック(又はコンテナブロック)」とよばれる。<br>ボックスの配置は，祖先・親要素の内容(コンテンツ)内になる。<br>必ずしも親要素内とは限らないので注意が必要。<br>例えば，「position:static」以外を指定すると，親要素と子要素の関係が変化する。(詳しくは別の機会に)<br>簡単に書くと，親要素に「static」以外が指定されていると，その親要素が基準となりボックスが配置される。</p><h2 id="ボックスの配置"><a href="#ボックスの配置" class="headerlink" title="ボックスの配置"></a>ボックスの配置</h2><p>ボックスの配置は，ブロックボックスとインラインボックスの2つに分けられる。<br>ブロックボックスは「個々の独立したかたまり」を意味する。<br>そして，その塊は下へ下へと配置されていく。<br>例えエディタ上でp要素が横に並んでいても，ブラウザ上では段落が分けられて表示される。</p><p>一方のインラインボックスは「行の一部」として表示される。<br>例えば，エディタでa要素とa要素の間を改行で区切っても，ブラウザ上では横に並んで表示される。</p><h2 id="marginの相殺"><a href="#marginの相殺" class="headerlink" title="marginの相殺"></a>marginの相殺</h2><p>marginの相殺は，</p><ul><li>上下に隣り合ってるボックス同士</li><li>入れ子関係にあるボックス同士(但し，間にboder,paddingがない場合)</li></ul><p>の間で起こる。<br>相殺が起こった場合，大きい方の数値が採用される。<br>相殺を回避するには，boder,paddingを設定するか，overflow:hidden　を設定する。<br>また，floatを設定した場合も相殺は起こらない。</p><h2 id="参考サイト"><a href="#参考サイト" class="headerlink" title="参考サイト"></a>参考サイト</h2><p><a href="http://momdo.s35.xrea.com/web-html-test/CSS3-ja/">CSS3の日本語訳集</a><br><a href="http://jtdan.com/spec/">W3C仕様書などのまとめ【保存版】</a><br><a href="https://developer.mozilla.org/ja/docs/Web/HTML/Block-level_elements">MDN web docs:ブロックレベル要素</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;わかったつもりで実は分かってなかったHTML５の基礎知識を纏めたメモ。&lt;br&gt;今回は，結構罠に嵌まる確率が高いmargin・paddingについてまとめてみた。&lt;/p&gt;</summary>
    
    
    
    <category term="ホームページ作成" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/"/>
    
    <category term="CSS" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/CSS/"/>
    
    
    <category term="HTML5" scheme="https://demskiautio.github.io/demski/tags/HTML5/"/>
    
    <category term="html" scheme="https://demskiautio.github.io/demski/tags/html/"/>
    
    <category term="css" scheme="https://demskiautio.github.io/demski/tags/css/"/>
    
    <category term="tips" scheme="https://demskiautio.github.io/demski/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>WindowsでGitHubを使う　～登録まで</title>
    <link href="https://demskiautio.github.io/demski/2019/03/24/git1/"/>
    <id>https://demskiautio.github.io/demski/2019/03/24/git1/</id>
    <published>2019-03-24T09:01:27.000Z</published>
    <updated>2020-05-26T11:42:54.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>バージョン管理ツールであるGitをインストールして，GitHubと連携させるまでのメモ</p><span id="more"></span><!--toc--><h2 id="Gitとは？"><a href="#Gitとは？" class="headerlink" title="Gitとは？"></a>Gitとは？</h2><p>分散型バージョン管理システムの一つで,もともとLinuxのソースコードを効果的に管理するために開発されたそうです。<br>好きなタイミングで保存し，また好きなときに前の状態に戻せたりできます。まぁ，バックアップ管理みたいなもの。</p><h2 id="GitHubとは？"><a href="#GitHubとは？" class="headerlink" title="GitHubとは？"></a>GitHubとは？</h2><p>Gitバージョン管理システムを使用したソフトウェア開発プロジェクトのための共有ウェブサービス。<br>公式HPで簡単に登録でき,基本的には無料で使える。<br>無料で公開リポジトリ(誰でも見れる状態)が５つ作れる。<br>有料オプションで非公開リポジトリやリポジトリの数が増える。</p><p><a href="https://github.com/" title="GitHub">GitHub</a></p><h2 id="git-for-windowsとは？"><a href="#git-for-windowsとは？" class="headerlink" title="git for windowsとは？"></a>git for windowsとは？</h2><p>GitをWindowsで扱えるようにしたパッケージ。<br>公式HPからダウンロード。それをインストールするだけで使えるようになる。<br><a href="https://gitforwindows.org/" title="Git for windows">git for windows</a></p><h3 id="インストール中のオプションについて"><a href="#インストール中のオプションについて" class="headerlink" title="インストール中のオプションについて"></a>インストール中のオプションについて</h3><p>いくつか聞かれるので下記を参考にインストール。  </p><ul><li>Select Components (コンポーネントの選択)</li></ul><blockquote><p>・Additional icons<br>┠ In the Quick Launch<br>┗ On the Desktop<br>→ショートカットアイコンを作成。デスクトップとクイック起動を選べる<br>・Windows Explorer integration<br>┠ Simple context menu (Registry based)<br>┃┠ Git Bash Here<br>┃┗ Git GUI Here<br>┗ Advanced context menu (git-cheetah plugin)<br>→ エクスプローラのコンテキストメニューにGitコマンドメニューを追加する<br>・Associate .git* configuration files with the default text editor<br>→ gitファイルをGit Bash上で実行するように関連付けする<br>・Associate .sh files to be run with Bash<br>→ シェルスクリプトファイルをGit Bash上で実行するように関連付けする<br>・Use a TruType font in all console windows (not only for Git Bash)<br>→ コマンドプロンプトで TrueType フォントを利用する設定。文字化けするので外す</p></blockquote><ul><li>Adjusting your PATH environment (環境変数PATHの設定)</li></ul><blockquote><p>・Use Git Bash only<br>→ 環境変数PATHの変更はなし<br>・Run Git from the Windows Command Prompt<br>→ 環境変数PATHにGITが追加される<br>・Run Git and included Unix tools from the Windows Command Prompt<br>→ GitとUnix toolsの両方が環境変数PATHに追加される。<br>find.exeやsort.exeなどのWindowsツールを上書きするので注意。</p></blockquote><ul><li>Configuring the line ending conversions (改行コードの変換の選択)</li></ul><blockquote><p>・Checkout Windows-style, commit Unix-style line endings<br>→ チェックアウト時にLFをCRLFに変換，コミット時にCRLFをLFに変換。<br>Windows上でのクロスプラットフォームプロジェクトではこれが推奨(“core.autocrlf”がtrue)。</p></blockquote><blockquote><p>・Checkout as-is, commit Unix-style line endings<br>→ チェックアウト時は変換なし，コミット時はCRLFをLFに変換。<br>Unix上でのクロスプラットフォームプロジェクトではこれが推奨(“core.autocrlf”がinput)。</p></blockquote><blockquote><p>・Checkout as-is, commit as-is<br>→ チェックアウト時，コミット時ともに改行コードの変換なし。<br>クロスプラットフォームのプロジェクトではではお勧めしない(“core.autocrlf”がfalse)。</p></blockquote><h2 id="初期設定：config"><a href="#初期設定：config" class="headerlink" title="初期設定：config"></a>初期設定：config</h2><p>初期設定として次のコマンドを叩き,ユーザー名とemailを登録する</p><h3 id="ユーザー名"><a href="#ユーザー名" class="headerlink" title="ユーザー名"></a>ユーザー名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;User name&quot;</span><br></pre></td></tr></table></figure><h3 id="メール"><a href="#メール" class="headerlink" title="メール"></a>メール</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;E-mail&quot;</span><br></pre></td></tr></table></figure><h2 id="sshキーの登録"><a href="#sshキーの登録" class="headerlink" title="sshキーの登録"></a>sshキーの登録</h2><p>ローカルからGitHubにpushする際，接続するために必要となる公開鍵を生成し登録。<br>Git Bashを起動して次のコマンドを打ち込んでいく。  </p><ul><li>すでにsshキーがあるか確認</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls ~/.ssh</span><br></pre></td></tr></table></figure><ul><li><p>「id_rsa」「id_rsa.pub」があれば,それを使う。無いなら生成する</p></li><li><p>キーの生成</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p>実行すると色々聞かれるが，すべて空白のままでよい。<br>生成されたファイルのうち「id_rsa.pub」をメモ帳などで開き，その内容をクリップボードにコピー。<br>githubのサイトで「setting→SSH Keys」でペースト。<br>初回のみ相手のサーバーを確認する作業がありますので，いちど試しに接続してみる。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;バージョン管理ツールであるGitをインストールして，GitHubと連携させるまでのメモ&lt;/p&gt;</summary>
    
    
    
    <category term="ホームページ作成" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/"/>
    
    <category term="Git" scheme="https://demskiautio.github.io/demski/categories/Git/"/>
    
    <category term="ツール" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/%E3%83%84%E3%83%BC%E3%83%AB/"/>
    
    <category term="GitHub" scheme="https://demskiautio.github.io/demski/categories/Git/GitHub/"/>
    
    <category term="Git" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/%E3%83%84%E3%83%BC%E3%83%AB/Git/"/>
    
    
    <category term="github" scheme="https://demskiautio.github.io/demski/tags/github/"/>
    
    <category term="ツール" scheme="https://demskiautio.github.io/demski/tags/%E3%83%84%E3%83%BC%E3%83%AB/"/>
    
    <category term="git" scheme="https://demskiautio.github.io/demski/tags/git/"/>
    
    <category term="windows10" scheme="https://demskiautio.github.io/demski/tags/windows10/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell のColorを変えよう</title>
    <link href="https://demskiautio.github.io/demski/2017/10/16/powershell-color/"/>
    <id>https://demskiautio.github.io/demski/2017/10/16/powershell-color/</id>
    <published>2017-10-16T09:59:01.000Z</published>
    <updated>2021-02-11T03:50:33.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><p>Windows10のPowerShellの文字色を変更する事ができたので，その時のメモ。<br>デフォルトだと，背景と同色で見えねーって事がありましたので・・・<br>簡単に調べると，仕様で片付けられてたんですが，追加プラグインを用いたら文字色を変えられる方法を見つけたので，その備忘録です。</p><span id="more"></span><!--toc--><h2 id="準備"><a href="#準備" class="headerlink" title="準備"></a>準備</h2><ul><li>特にいらない(PowerShellを立ち上げられればOK。まぁ，その他細かいことは各自で確認)</li></ul><h2 id="実行方法"><a href="#実行方法" class="headerlink" title="実行方法"></a>実行方法</h2><h3 id="PowerShellにPS1ファイルの実行権限を与える"><a href="#PowerShellにPS1ファイルの実行権限を与える" class="headerlink" title="PowerShellにPS1ファイルの実行権限を与える"></a>PowerShellにPS1ファイルの実行権限を与える</h3><p>PowerShellのデフォルトでは，セキュリティの観点から権限（Execution Policy）が制限された状態になっている。<br>これを変更して，最低限のスクリプトやコマンドを実行できるようにする。  </p><p>PowerShellを「管理者権限」で立ち上げたら，現在の設定を確認する。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS C:\MyScript&gt; Get-ExecutionPolicy ……現在のポリシーの取得</span><br><span class="line">Restricted ……結果</span><br></pre></td></tr></table></figure><p>全てのスクリプトが実行禁止にされてる状態だというのがわかる。<br>次のコマンドで，権限を最低限のスクリプトが動くようにする。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS C:\MyScript&gt; Set-ExecutionPolicy RemoteSigned ……ポリシーの設定</span><br><span class="line">実行ポリシーの変更</span><br><span class="line">実行ポリシーは、信頼されていないスクリプトからの保護に役立ちます。実行ポリシーを変更すると、about_Execution_Policies のヘルプ トピック (http://go.microsoft.com/fwlink/?LinkID=135170) で説明されているセキュリティ上の危険にさらされる可能性があります。実行ポリシーを変更しますか?</span><br><span class="line">[Y] はい(Y)  [N] いいえ(N)  [S] 中断(S)  [?] ヘルプ (既定値は &quot;Y&quot;):  ……［Enter］キーだけを押すと設定が変更される</span><br></pre></td></tr></table></figure><p>この辺りの事は，先輩方が纏めてくれているので，スクショで拝借。</p><div class="figure right" style="width:;"><a class="fancybox" href="PowerShellPolicy.PNG" title="PowerShellPolicy" data-caption="PowerShellPolicy" data-fancybox="default"><img class="fig-img" src="PowerShellPolicy.PNG" alt="PowerShellPolicy"></a><span class="caption">PowerShellPolicy</span></div><div style="clear:both;"></div><p><span style="font-size: 14px">出典：<a href="https://qiita.com/gcyagi/items/b86d2a24f2334b9c72ee">Windows PowerShellを使ってみたメモ</a> </span></p><h3 id="scoopをインストール"><a href="#scoopをインストール" class="headerlink" title="scoopをインストール"></a>scoopをインストール</h3><span class="highlight-text blue">scoop</span>は，コマンドラインだけでアプリケーションやプログラムをインストールしてくれるパッケージ。  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iex (new-object net.webclient).downloadstring(&#x27;https://get.scoop.sh&#x27;)</span><br></pre></td></tr></table></figure><p><span style="font-size: 14px">出典：<a href="https://github.com/lukesampson/scoop">Scoop(github)</a></span></p><p>次に同じ方が開発されているconcfgをインストール  </p><span class="highlight-text blue">concfg</span>はPowerShellの設定をインポート・エクスポートするためのプログラム。  <p>これを利用することで，いろいろなテーマが簡単に利用できるようになる。<br>古今東西，エディタなんかでお世話になってるthemeを基にしたカラーカスタマイズが揃ってるので，色々いじってみる。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># concfgをインストール</span><br><span class="line">$ scoop install concfg</span><br><span class="line"></span><br><span class="line"># concfgでMonokaiテーマをインストール</span><br><span class="line">$ concfg import monokai</span><br></pre></td></tr></table></figure><p>レジストリを弄ってるので，書き換えたらいったん再起動したほうが良いかも。<br>一応，再起動無しでも複数回書き換えられたので，使うテーマが決まったらでよさそう。</p><h3 id="themeを基にカスタマイズ"><a href="#themeを基にカスタマイズ" class="headerlink" title="themeを基にカスタマイズ"></a>themeを基にカスタマイズ</h3><p>あっちのテーマを入れたら，色が暗すぎて見えなかったり…。<br>別の入れたらカラフル過ぎで目がチカチカしたり。<br>なかなか良いthemeが見つからず，自分で手直ししたいな～と色々とググってたら，以下のようなサイトを見つけた。<br><a href="http://github.mindzgroup.com/concfg/">PS Theme Viewer</a></p><p>上のプルダウンからthemeを選んで，Load Selectedを押すと，そのthemeの色が下のカラー表各色の円を挟んだ右側に出力される。<br>真ん中の円をクリックすると，右側のColor Editorが開いて，その色を編集することができる。<br>Previewには，円の色が反映されてcheckできる。<br>このthemeを使いたいけど，引数の色が～とかって時にそこだけ書き換えてみたり。<br>ある程度納得できるカラーが決まったら，downloadをクリックすれば，Jsonファイルがdownloadできる。<br>あとは，ファイルの名前を適当に変えて（いやなら変えんでもいいけどｗ）concfgのテーマフォルダに放り込んむ。<br>自分の場合は下記のフォルダに入ってた。</p><div class="alert "><p>C:\Users\ユーザー名\scoop\apps\concfg\0.2017.6.17\presets</p></div><p>あとは，同じように</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ concfg import ダウンロードしたファイル名</span><br><span class="line">Ll Ii Oo 0</span><br></pre></td></tr></table></figure><p>で，反映してくれる。  </p><p>というわけで，松本イズミバージョンを作ってみた。<br>（背景は透過させてるだけです。PowerShellとは一切関わりありません。背景に画像つけ方知ってたら教えてください。）</p><div class="figure left" style="width:;"><a class="fancybox" href="matumotoizumi.PNG" title="PowerShell松本イズミver" data-caption="PowerShell松本イズミver" data-fancybox="default"><img class="fig-img" src="matumotoizumi.PNG" alt="PowerShell松本イズミver"></a><span class="caption">PowerShell松本イズミver</span></div><div style="clear:both;"></div><h2 id="終わり"><a href="#終わり" class="headerlink" title="終わり"></a>終わり</h2><p>ということで，なんとかPowerShellのカラーを変えることに成功。<br>これで，色被りで見えなかった所も見えるようになりました。  </p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://technet.microsoft.com/ja-jp/scriptcenter/powershell_owner.aspx"> Windows PowerShell オーナー マニュアル</a></li><li><a href="https://qiita.com/migeru/items/0dd6302120447b73ea56">ConcfgでPowershellをモダンでオシャレにしたかった</a></li><li><a href="https://github.com/lukesampson/scoop/wiki/Theming-Powershell">lukesampson&#x2F;scoop (github)</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;はじめに&quot;&gt;&lt;a href=&quot;#はじめに&quot; class=&quot;headerlink&quot; title=&quot;はじめに&quot;&gt;&lt;/a&gt;はじめに&lt;/h2&gt;&lt;p&gt;Windows10のPowerShellの文字色を変更する事ができたので，その時のメモ。&lt;br&gt;デフォルトだと，背景と同色で見えねーって事がありましたので・・・&lt;br&gt;簡単に調べると，仕様で片付けられてたんですが，追加プラグインを用いたら文字色を変えられる方法を見つけたので，その備忘録です。&lt;/p&gt;</summary>
    
    
    
    <category term="Windows10" scheme="https://demskiautio.github.io/demski/categories/Windows10/"/>
    
    <category term="PowerShell" scheme="https://demskiautio.github.io/demski/categories/Windows10/PowerShell/"/>
    
    <category term="scoop" scheme="https://demskiautio.github.io/demski/categories/Windows10/scoop/"/>
    
    <category term="confg" scheme="https://demskiautio.github.io/demski/categories/confg/"/>
    
    
    <category term="Windows10" scheme="https://demskiautio.github.io/demski/tags/Windows10/"/>
    
    <category term="PowerShell" scheme="https://demskiautio.github.io/demski/tags/PowerShell/"/>
    
    <category term="Scoop" scheme="https://demskiautio.github.io/demski/tags/Scoop/"/>
    
    <category term="concfg" scheme="https://demskiautio.github.io/demski/tags/concfg/"/>
    
  </entry>
  
  <entry>
    <title>浮動小数点</title>
    <link href="https://demskiautio.github.io/demski/2016/04/04/floating-point/"/>
    <id>https://demskiautio.github.io/demski/2016/04/04/floating-point/</id>
    <published>2016-04-04T09:28:07.000Z</published>
    <updated>2022-10-03T01:57:50.125Z</updated>
    
    <content type="html"><![CDATA[<p>Javascriptの勉強をし直しているので，分かってなかったことなんかをメモしています。<br>今回は，数値計算とかでよく出てくる浮動小数点について調べてみました。  </p><span id="more"></span><p>Mozillaの<a href="https://developer.mozilla.org/ja/docs/Web/JavaScript/A_re-introduction_to_JavaScript">MDN Javascript再入門</a><br>によると，</p><blockquote><p>JavaScript における数値は，仕様によると「倍精度 64 ビットフォーマット IEEE 754 値 (double-precision 64-bit format IEEE 754 values)」です。</p></blockquote><p>と，いきなり難しいことを言ってきます…。<br>ということで，以下に調べてみた結果をメモ。</p><!-- toc --><h2 id="IEEE-754"><a href="#IEEE-754" class="headerlink" title="IEEE 754"></a>IEEE 754</h2><p>IEEE＝「Institute of Electrical and Electronics Engineers＝米国電気電子技術者協会」の略。<br>IEEEは電気工学を源流とする通信・電子・情報工学とその関連分野の学会であり，事実上コンピューターの色々な仕様の世界標準決定機関です。<br>で，「IEEE754」は，この学会が取り決めた「 浮動小数点演算に関する標準規格」です。</p><h2 id="不動小数点とは"><a href="#不動小数点とは" class="headerlink" title="不動小数点とは"></a>不動小数点とは</h2><p>コンピューターは厳密には「0」と「1」で構成される2進数しか扱えません。<br>そこで，(小数点を含む)整数を表すのに特別な方法が必要となってきます。  </p><p>小数点を表すには固定小数点数と浮動小数点数があります。<br>固定小数点とは，普段よく目にする「3.1424,,,,,」のように表現すること。<br>この方式ではコンピューターが理解することができません。  </p><p>一方，不動小数点では「指数形式(○○×△△の□□乗)」という形で表します。<br>具体的には，「3.14」を表すのに「31.4×10－1，314.0×10－2，3.14×100，31.4×10－1，314.0×10－2,,,」と色んな形で表現することができます。<br>表現する形が多いということは，コンピューターやソフトを作るときに作り手が好き勝手に決められることになります。<br>ところが，それでは互換性とかの問題で扱いにくいのでIEEEが基準を示し，作り手がそれを採用して互換性を保つようになりました。</p><p>ということで，以下はIEEE745に沿った浮動小数点です。</p><h2 id="IEEE-754における浮動小数点"><a href="#IEEE-754における浮動小数点" class="headerlink" title="IEEE 754における浮動小数点"></a>IEEE 754における浮動小数点</h2><p>浮動小数点で表現するのに，指数形式を部分的に分けて使います。<br>「○○×△△の□□乗」は</p><ul><li>○○を仮数部(符号)</li><li>△△を基数部</li><li>□□乗を指数部</li></ul><p>と呼びます。<br>そして，求められる計算精度とデータ容量の問題を考慮して以下の2つの形式が定められています。</p><ul><li>半精度浮動小数点数では，符号部 1 ビット ・ 指数部 5 ビット ・ 仮数部 10 ビット &#x3D;16ビット</li><li>単精度浮動小数点数では，符号部 1 ビット ・ 指数部 8 ビット ・ 仮数部 23 ビット &#x3D;32ビット</li><li>倍精度浮動小数点数では，符号部 1 ビット ・ 指数部 11 ビット ・ 仮数部 52 ビット &#x3D;64ビット</li><li>四倍精度浮動小数点数では，符号部 1 ビット ・ 指数部 15 ビット ・ 仮数部 112 ビット&#x3D;127ビット</li></ul><p>として扱います。<br>最近よく言われる「32bit版Windows10」「64bit版Windows10」といのは，ここに由来しています。<br>さらに，</p><ul><li>符号部は「正の値なら0」,「 負の値なら1」とする。</li><li>仮数部は，整数部分が 1 であるような2進小数の小数部分（ケチ表現）を表す。</li><li>指数部は，符号なし2進整数とし，半精度では 15，単精度では 127，倍精度では 1023，四倍精度では 16383 のゲタを履かせたゲタ履き表現で表す。</li></ul><h2 id="固定小数点を浮動小数点に変換"><a href="#固定小数点を浮動小数点に変換" class="headerlink" title="固定小数点を浮動小数点に変換"></a>固定小数点を浮動小数点に変換</h2><p>実際に単精度で「3.25」を浮動小数点に変換してみます。</p><h3 id="10進数から2進数"><a href="#10進数から2進数" class="headerlink" title="10進数から2進数"></a>10進数から2進数</h3><p>10進数を整数と小数点以下の2つに分けます。<br>理由は，それぞれ2進数に直す方法が異なるから。<br>整数はひたすら2で割りその余りを出します。<br>3を2進数にすると，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3/2→1余り1</span><br><span class="line">1/2→0余り1</span><br></pre></td></tr></table></figure><p>並びは下からなので，答えは「11」となります。</p><p>続いて小数点以下を2進数にします。<br>方法は10進数の小数部を2倍して商を求めます。<br>商の小数部を繰り返し2倍していき，その整数部が2進数になります。<br>つまり，「0.25」を計算すると</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0.25*2→0.5 整数部0</span><br><span class="line">0.5*2→1 整数部1</span><br></pre></td></tr></table></figure><p>並びは整数とは逆で上から読むので，答えは「01」となります。<br>よって，「3.25」の2進数は「11.01」となります。</p><h3 id="2進数を「1-◯◯×2-△」にする"><a href="#2進数を「1-◯◯×2-△」にする" class="headerlink" title="2進数を「1.◯◯×2^△」にする"></a>2進数を「1.◯◯×2^△」にする</h3><ul><li>符号は正の数なので「0」。</li><li>指数は2に小数点を動かした桁と同数に127(単精度)を足すので，「1+127＝128」とります。</li></ul><p>128を2進数に直すと</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">128/2→64余り0</span><br><span class="line">64/2→32余り0</span><br><span class="line">32/2→16余り0</span><br><span class="line">16/2→8余り0</span><br><span class="line">8/2→4余り0</span><br><span class="line">4/2→2余り0</span><br><span class="line">2/2→1余り0</span><br><span class="line">1/2→0余り1</span><br></pre></td></tr></table></figure><p>よって答えは「1000 0000」。</p><p>仮数は整数部が「1」固定の2進数になるように小数点を左に移動するので，<code>1.101</code>。  これを「正規化」といいます。<br>仮数は23ビット(単精度)で小数点より右側だけなので，足りない分を0でうめて<code>101000000000 00000000000</code>。</p><p>浮動小数点は符号，指数，仮数を合わせて<code>01000000010100000000000000000000</code>となります。<br>以上で，「3.25」を32bitの浮動小数点に変換できました。</p><h2 id="Javascriptでは……"><a href="#Javascriptでは……" class="headerlink" title="Javascriptでは……"></a>Javascriptでは……</h2><p>冒頭のJavascriptの「数値」の扱いの仕様に戻ると「倍精度 64 ビットフォーマット」で扱うとなってます。<br>ところが，読み進めると</p><blockquote><p>実のところ，整数値は 32 ビット int 型として扱われます。また一部の実装では，32 ビット整数値ではなく Number で有効な命令の実行を求められるまでの間，32 ビット整数値として保存します。これはビット演算を行う際に重要なことです。</p></blockquote><p>とあります。<br>よくわかりません。^^;<br>とりあえず，長くなったので項目を改めます。</p><h2 id="参照サイト"><a href="#参照サイト" class="headerlink" title="参照サイト"></a>参照サイト</h2><p><a href="http://itpro.nikkeibp.co.jp/members/ITPro/ITBASIC/20020624/" title="１週間で学ぶIT基礎の基礎">ITpro『【5分で覚えるIT基礎の基礎】ゼロから学ぶ2進数　第4回』</a><br><a href="http://dangerous-animal141.hatenablog.com/entry/2014/05/10/000000" title="動小数点数について本気出して考えてみた">一から勉強させてください(￣ω￣;)</a><br><a href="https://developer.mozilla.org/ja/docs/Web/JavaScript/A_re-introduction_to_JavaScript" title="Javascript再入門">MDN Javascript再入門</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Javascriptの勉強をし直しているので，分かってなかったことなんかをメモしています。&lt;br&gt;今回は，数値計算とかでよく出てくる浮動小数点について調べてみました。  &lt;/p&gt;</summary>
    
    
    
    <category term="コンピュータ" scheme="https://demskiautio.github.io/demski/categories/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF/"/>
    
    <category term="プログラミング" scheme="https://demskiautio.github.io/demski/categories/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
    <category term="数学" scheme="https://demskiautio.github.io/demski/categories/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="プログラミング" scheme="https://demskiautio.github.io/demski/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"/>
    
    <category term="Javascript" scheme="https://demskiautio.github.io/demski/tags/Javascript/"/>
    
    <category term="数値" scheme="https://demskiautio.github.io/demski/tags/%E6%95%B0%E5%80%A4/"/>
    
    <category term="数学" scheme="https://demskiautio.github.io/demski/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Stylishを使ってGoogleに月島ほろちゃんを召喚しよう by FireFox</title>
    <link href="https://demskiautio.github.io/demski/2016/02/14/horo/"/>
    <id>https://demskiautio.github.io/demski/2016/02/14/horo/</id>
    <published>2016-02-14T12:08:10.000Z</published>
    <updated>2019-05-25T05:11:23.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>FireFoxのプラグイン「Stylish」を利用して，Googleの検索画面に月島ほろちゃんを召喚しようという計画です。<br>「Stylish」の使い方も含め，メモとして残しておきます。</p><span id="more"></span><div class="figure fig-25" style="width:100%;"><a class="fancybox" href="horo.png" title="月島ほろ01" data-caption="月島ほろ01" data-fancybox="default"><img class="fig-img" src="horo.png" style="width:100%;height:100%;"alt="月島ほろ01"></a><span class="caption">月島ほろ01</span></div><div style="clear:both;"></div><div class="figure fig-25" style="width:100%;"><a class="fancybox" href="horo2.png" title="月島ほろ02" data-caption="月島ほろ02" data-fancybox="default"><img class="fig-img" src="horo2.png" style="width:100%;height:100%;"alt="月島ほろ02"></a><span class="caption">月島ほろ02</span></div><div style="clear:both;"></div><!-- toc --><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li>HTML&#x2F;CSSの予備知識</li><li>Firebugの基本的な使い方</li></ul><h3 id="用意するもの"><a href="#用意するもの" class="headerlink" title="用意するもの"></a>用意するもの</h3><ul><li>FireFox</li><li>Stylish</li><li>背景にしたい画像</li></ul><h2 id="「Stylish」をFireFoxにインストール"><a href="#「Stylish」をFireFoxにインストール" class="headerlink" title="「Stylish」をFireFoxにインストール"></a>「Stylish」をFireFoxにインストール</h2><p>まずは，これが無ければ何も始まらない。<br>ということで，下記でdownload。</p><p><a href="https://www.mozilla.jp/" title="FireFox">FireFox</a><br><a href="https://addons.mozilla.org/ja/firefox/addon/stylish/" title="Stylish">Stylish :: Add-ons for Firefox </a>  </p><p>今回使う「Stylish」は，ブラウザ側に保存された所謂「<strong>ユーザースタイルシート</strong>」を使ってサイトを上書きしています。<br>別に，googleのサイトをハッキングしたりとかはしてるわけではありませんのでご安心を。</p><h2 id="「stylish」の使い方"><a href="#「stylish」の使い方" class="headerlink" title="「stylish」の使い方"></a>「stylish」の使い方</h2><h3 id="Google用のスキンをGet"><a href="#Google用のスキンをGet" class="headerlink" title="Google用のスキンをGet"></a>Google用のスキンをGet</h3><p>まずは，スタイルを書き換えたいサイトを表示しましょう。今回の場合ならGoogleですね。<br>続いて，ステータスバーにあるStylishのアイコンを右クリックして，<strong>「このサイト用のスタイルを探す」</strong> をクリックします。</p><div class="figure fig-50" style="width:;"><a class="fancybox" href="stylish.png" title="" data-caption="" data-fancybox="default"><img class="fig-img" src="stylish.png" alt=""></a></div><div style="clear:both;"></div>  <p>そうすると，<a href="https://userstyles.org/">userstyles.org</a> というコミュニティーサイトに飛びます。<br>しかも，既に「Google」用に作られたスタイルの検索結果が表示されます。<br>その中の気に入った物をクリックし,詳細を確認（殆ど英語ですが^^;）。<br>ページの右上にある <strong>「Install with Stylish」</strong> をクリックすると，そのスタイルが影響するサイトのURLを確認するアラートの後,ダウンロードされStylishから使えるようになります。<br>見事に書き換えられたら,成功です。</p> <div class="figure fig-50" style="width:100%;"><a class="fancybox" href="stylish_google.png" title="stylish例" data-caption="stylish例" data-fancybox="default"><img class="fig-img" src="stylish_google.png" style="width:100%;height:100%;"alt="stylish例"></a><span class="caption">stylish例</span></div><div style="clear:both;"></div><p> <span style="font-size: 65%">※『google space beer』というスタイルを適用した様子</span></p><p>解除したい時はStylish アイコンのメニューから，当該のテーマ名のチェックを外せば，適用が解除されます。<br>このように既に用意されているスタイルを探して使うだけでも充分楽しめますね。(もちろん，テーマのある他サイトでもOK)</p><h2 id="術式用言語について"><a href="#術式用言語について" class="headerlink" title="術式用言語について"></a>術式用言語について</h2><p>先にも述べたように，「Stylish」はCSSを使ってサイトを上書きしています。<br>CSSは，簡単に述べるとホームページのデザインを定義する言語です。(因みに，HTMLは文章構造を定義しています。)<br>まぁ，この辺りは説明しだすと長いんで，下記に示す参考サイトなり書籍なりGoogle大先生に聞くなりしてください。</p><h4 id="参考サイト"><a href="#参考サイト" class="headerlink" title="参考サイト"></a>参考サイト</h4><ul><li><a href="http://www.tohoho-web.com/" title="とほほのWWW入門">とほほのWWW入門</a></li><li><a href="http://www.htmq.com/" title="HTMLクイックリファレンス">HTMLクイックリファレンス</a></li></ul><h3 id="Firebugにつて"><a href="#Firebugにつて" class="headerlink" title="Firebugにつて"></a>Firebugにつて</h3><p>さて，召喚魔法の為の最後の道具は「Firebug」というこれまたFireFoxのアドオンです。</p><p><a href="https://addons.mozilla.org/ja/firefox/addon/firebug/" title="Firebug">Firebug:: Add-ons for Firefox</a>  </p><p>このアドオンは，FireFoxでWeb開発するうえで，色々な便利機能を追加してくれます。<br>ほかにも，WebDeveloperツールとか色々ありますけど，Firebugが一番有名(＝日本語情報が豊富)なので，今回はこれを使用します。  </p><p>インストールが終わると，ツールバーにハチのアイコンが出てくるのでそれをクリックすれば起動します。<br>すると，ブラウザ内にFirebugeの画面が現れます。<br>通常は右にHTMLのソースが，左にCSSのソース等が表示されると思います。この画面を使ってGoogleさんを分析していきます。  </p><h4 id="参考サイト-1"><a href="#参考サイト-1" class="headerlink" title="参考サイト"></a>参考サイト</h4><ul><li><a href="http://web8bungi.sakura.ne.jp/first/htmlcss/firebug.html" title="Web八分儀">Web八分儀</a></li></ul><h2 id="GoogleサイトのHTMLを分析"><a href="#GoogleサイトのHTMLを分析" class="headerlink" title="GoogleサイトのHTMLを分析"></a>GoogleサイトのHTMLを分析</h2><p>まずは，Googleのサイトを表示しつつFirebugを起動します。<br>そして，Firebugのハチアイコンの横にある長方形に矢印のあるボタンをクリックします。  </p><div class="figure fig-50" style="width:100%;"><a class="fancybox" href="firebug2.png" title="firebug2" data-caption="firebug2" data-fancybox="default"><img class="fig-img" src="firebug2.png" style="width:100%;height:100%;"alt="firebug2"></a><span class="caption">firebug2</span></div><div style="clear:both;"></div><p>そのままGoogleの画面にカーソルを持ってくると，青い枠で特定のエリアが囲われます。</p><div class="figure fig-50" style="width:100%;"><a class="fancybox" href="google_select.png" title="要素調査" data-caption="要素調査" data-fancybox="default"><img class="fig-img" src="google_select.png" style="width:100%;height:100%;"alt="要素調査"></a><span class="caption">要素調査</span></div><div style="clear:both;"></div><p>それをクリックすれば，「要素」が選ばれ，Firebugの右画面にはその「要素」に関連付けられているCSSが表示されます。<br>このCSSをStylishで上書きしていくわけです。<br>手順としては，変更したい「要素」の「ID」or「class」を調べ，その「ID」or「class」をStylishで上書きしていくという作業になります。</p><h2 id="Stylishで術式を書く"><a href="#Stylishで術式を書く" class="headerlink" title="Stylishで術式を書く"></a>Stylishで術式を書く</h2><p>では，早速書いていきます。<br>Googleさんを表示した状態で，Stylishのアイコンから「新しいスタイルを書く→　このサイト専用」を選びます。<br>すると，下記の「おまじない」が書かれた画面が開くと思います。</p><figure class="highlight plaintext"><figcaption><span>[おまじない] [lang:CSS]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@namespace url(http://www.w3.org/1999/xhtml);</span><br><span class="line"></span><br><span class="line">@-moz-document domain(&quot;google.co.jp&quot;) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>この{　}の中にCSSを書いていきます。  </p><p>まず簡単に，下記を入力してみてください。</p><figure class="highlight plaintext"><figcaption><span>[背景色を変更] [lang:CSS]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    backuground-color: #000000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>「保存」または「お試し」を押してみてください。<br>そしてGoogleを見てみると，背景が黒くなっていたら成功です。</p><h2 id="ほろちゃん召喚"><a href="#ほろちゃん召喚" class="headerlink" title="ほろちゃん召喚"></a>ほろちゃん召喚</h2><p>さて，いよいよわれらが「月島ほろ」を呼び出してみたいと思います。<br>まずは，公式ホームページやTwitterから公式画像をダウンロードしましょう。</p><p><del>[月島ほろ公式ホームページ]</del> 活動停止により閉鎖;;</p><p><a href="https://twitter.com/horo_tsukishima" title="月島ほろ公式Twitter">月島ほろ公式Twitter</a></p><p>画像をダウンロードしたら，PCの任意の場所に保存しましょう。<br>そして，そのまま画像をドロップでブラウザに放り込みます。<br>するとURL欄に次の形式で画像までのルートが記載されます。  </p><figure class="highlight plaintext"><figcaption><span>[背景色を変更] [lang:CSS]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">file:///ドライブ名:（例 D:）/フォルダ名/画像ファイル名</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>このURLをコピーして，stylishのbodyに次の形式で貼り付けます。</p><figure class="highlight plaintext"><figcaption><span>[背景に画像表示] [lang:CSS]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    background-image:(&quot;コピーしたURL&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>※stylish公式サイトの使用上「background-image」はコメントアウトしてありますので，解除してください。</p><figure class="highlight plaintext"><figcaption><span>[背景色を変更] [lang:CSS]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  /*background-image: url(&quot;コピーしたURL&quot;);*/→「/*」「*/」をとる</span><br><span class="line">→    background-image: url(&quot;file:///ドライブ名:（例 D:）/フォルダ名/画像ファイル名&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>それを保存すれば，Googleへの月島ほろ召喚完了です。<br>ところが，このままでは無限にほろちゃんが呼び出されてしまいます。</p><div class="figure fig-50" style="width:;"><a class="fancybox" href="horo3.png" title="" data-caption="" data-fancybox="default"><img class="fig-img" src="horo3.png" alt=""></a></div><div style="clear:both;"></div>   <p>そこで，次のコードを付け足します。</p><figure class="highlight plaintext"><figcaption><span>[背景画像配置] [lang:CSS]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    background-image:(&quot;コピーしたURL&quot;);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment: fixed;</span><br><span class="line">    background-position: right bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>これで，ページの右下に固定されて表示されます。  </p><div class="figure fig-50" style="width:100%;"><a class="fancybox" href="horo.png" title="月島ほろ %" data-caption="月島ほろ %" data-fancybox="default"><img class="fig-img" src="horo.png" style="width:100%;height:100%;"alt="月島ほろ %"></a><span class="caption">月島ほろ %</span></div><div style="clear:both;"></div><p>設定によって好きな場所に出現させることができるので，冒頭の参考サイト様を参照に各自設定してみてください。<br>他の要素は，先に述べた通りIDやclassを指定して設定していくのが便利です。  </p><h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>Stylishを使うと，簡単にユーザースタイルシートのオン・オフが切り替えられて便利です。<br>HTML&#x2F;CSSの知識がちょっと必要ですけど，プログラミング言語ほど難しくないので，チャレンジしてみてください。<br>以上で，「Stylishを使ってGoogleに月島ほろを召喚 by FireFox」は終了です。<br>お疲れ様でした。</p><p>※下記に，Topの画像で使ってるCSSを公開しておきます。但し，ソースコードだけで画像は付いてきません。好きな画像を引っ張ってきて設定してください。<br>※CSSの仕様上background-imageのURL欄に他サイトにある画像のURLを入力すると，その画像を背景に使えますが，サーバーの負担や規約違反等になるので絶対にしないでください。</p><p><a href="https://userstyles.org/styles/124293/horo-tsukishima-on-google">horo_tsukishima on google</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;FireFoxのプラグイン「Stylish」を利用して，Googleの検索画面に月島ほろちゃんを召喚しようという計画です。&lt;br&gt;「Stylish」の使い方も含め，メモとして残しておきます。&lt;/p&gt;</summary>
    
    
    
    <category term="ホームページ作成" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/"/>
    
    <category term="コンピューターとインターネット" scheme="https://demskiautio.github.io/demski/categories/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%A8%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%8D%E3%83%83%E3%83%88/"/>
    
    <category term="Browser" scheme="https://demskiautio.github.io/demski/categories/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%A8%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%8D%E3%83%83%E3%83%88/Browser/"/>
    
    <category term="FireFox" scheme="https://demskiautio.github.io/demski/categories/%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%A8%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%8D%E3%83%83%E3%83%88/Browser/FireFox/"/>
    
    <category term="css" scheme="https://demskiautio.github.io/demski/categories/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E4%BD%9C%E6%88%90/css/"/>
    
    
    <category term="web" scheme="https://demskiautio.github.io/demski/tags/web/"/>
    
    <category term="css" scheme="https://demskiautio.github.io/demski/tags/css/"/>
    
    <category term="月島ほろ" scheme="https://demskiautio.github.io/demski/tags/%E6%9C%88%E5%B3%B6%E3%81%BB%E3%82%8D/"/>
    
    <category term="Stylish" scheme="https://demskiautio.github.io/demski/tags/Stylish/"/>
    
    <category term="Browser" scheme="https://demskiautio.github.io/demski/tags/Browser/"/>
    
    <category term="FireFox" scheme="https://demskiautio.github.io/demski/tags/FireFox/"/>
    
  </entry>
  
  <entry>
    <title>hexo + githubページでブログ構築</title>
    <link href="https://demskiautio.github.io/demski/2015/12/28/introduction/"/>
    <id>https://demskiautio.github.io/demski/2015/12/28/introduction/</id>
    <published>2015-12-28T09:29:53.000Z</published>
    <updated>2020-05-26T12:53:06.144Z</updated>
    
    <content type="html"><![CDATA[<p>hexoとgithubページでブログを構築したので，手順をメモ。<br>githubページに公開するときに少し迷ったので,その点を重点的に。</p><span id="more"></span><!-- toc --><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><ul><li>Windows8.1</li><li>node.js v0.10.33</li><li>npm v1.4.28.</li><li>hexo v2.8.3</li></ul><p>Windows8.1にnode.jsをインストールして環境を構築。<br>その後hexoをコマンドプロプントでインストール。</p><h2 id="Hexoをインストール"><a href="#Hexoをインストール" class="headerlink" title="Hexoをインストール"></a>Hexoをインストール</h2><p>コマンドプロプントもしくはGitBashで,下記コマンドを実行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><p>これで，hexoの環境ができあがる。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><p>で，バージョンが表示されれば成功  </p><h2 id="blogの作成"><a href="#blogの作成" class="headerlink" title="blogの作成"></a>blogの作成</h2><p>コンソールでblogを作りたいフォルダに移動して，以下のコマンドを実行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init BLOGNAME</span><br></pre></td></tr></table></figure><p>これで，BLOGNAMEというフォルダができるので移動</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> BLOGNAME</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>これでブログが作成されたので，ローカルサーバーを立ち上げ確認</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>で立ち上げ,<a href="http://localhost:4000/">http://localhost:4000</a>で確認</p><h2 id="github-に-Github-Pagesのリポジトリを作成"><a href="#github-に-Github-Pagesのリポジトリを作成" class="headerlink" title="github に Github Pagesのリポジトリを作成"></a>github に Github Pagesのリポジトリを作成</h2><p>new repositoryから，Repository nameを「username.github.io」にして作成。<br>usernameを一致させないと，失敗するっぽい。</p><h2 id="SSH公開鍵の登録"><a href="#SSH公開鍵の登録" class="headerlink" title="SSH公開鍵の登録"></a>SSH公開鍵の登録</h2><p>SSHキーを作成して，ローカルとgithubアカウントを紐付ける。<br>コンソールで作っていくが,GitBashで作った方がうまくいくみたい。<br>コマンドは以下の通り</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ ssh-keygen</span><br><span class="line"> ssh-kygen</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">(以下略)</span><br></pre></td></tr></table></figure><p>途中でパスワードを設定するか聞かれるが,特に設定したくない場合は空白のままenter。</p><p>.sshフォルダにid_rsaとid_rsa.pubというファイルがあれば成功。<br>id_rsa.pubが公開鍵になるので,メモ帳などで開いて内容をコピー。<br>Account settings &gt; SSH keys &gt; Add SSH key で先程コピーした内容を貼付け。<br>登録成功の画面が現われたら登録完了</p><h2 id="フォルダをgithub上のリポジトリに紐付け"><a href="#フォルダをgithub上のリポジトリに紐付け" class="headerlink" title="フォルダをgithub上のリポジトリに紐付け"></a>フォルダをgithub上のリポジトリに紐付け</h2><p>ローカルのblogフォルダとGithbuPagesリポジトリと紐付けるため以下のコマンドを実行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">touch</span> README.md</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;hello github.io!!&quot;</span> &gt; index.html</span><br><span class="line">$ git init</span><br><span class="line">$ git remote add origin git@github.com:/username.github.io.git</span><br></pre></td></tr></table></figure><h2 id="ファイルをアップロード"><a href="#ファイルをアップロード" class="headerlink" title="ファイルをアップロード"></a>ファイルをアップロード</h2><p>下記のコマンドを実行して，ファイルをアップロード</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure><p>成功すれば，<a href="http://username.github.io/">http://username.github.io</a>に公開されているはず。</p><h2 id="Hexo-コマンド"><a href="#Hexo-コマンド" class="headerlink" title="Hexo コマンド"></a>Hexo コマンド</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Commands:</span><br><span class="line">  clean     Removed generated files and cache.</span><br><span class="line">  config    Get or <span class="built_in">set</span> configurations.</span><br><span class="line">  deploy    Deploy your website.</span><br><span class="line">  generate  Generate static files.</span><br><span class="line">  <span class="built_in">help</span>      Get <span class="built_in">help</span> on a <span class="built_in">command</span>.</span><br><span class="line">  init      Create a new Hexo folder.</span><br><span class="line">  list      List the information of the site</span><br><span class="line">  migrate   Migrate your site from other system to Hexo.</span><br><span class="line">  new       Create a new post.</span><br><span class="line">  publish   Moves a draft post from _drafts to _posts folder.</span><br><span class="line">  render    Render files with renderer plugins.</span><br><span class="line">  server    Start the server.</span><br><span class="line">  version   Display version information.</span><br><span class="line"></span><br><span class="line">Global Options:</span><br><span class="line">  --config  Specify config file instead of using _config.yml</span><br><span class="line">  --cwd     Specify the CWD</span><br><span class="line">  --debug   Display all verbose messages <span class="keyword">in</span> the terminal</span><br><span class="line">  --draft   Display draft posts</span><br><span class="line">  --safe    Disable all plugins and scripts</span><br><span class="line">  --silent  Hide output on console</span><br><span class="line"></span><br><span class="line">For more <span class="built_in">help</span>, you can use <span class="string">&#x27;hexo help [command]&#x27;</span> <span class="keyword">for</span> the detailed information</span><br><span class="line">or you can check the docs: http://hexo.io/docs/</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;hexoとgithubページでブログを構築したので，手順をメモ。&lt;br&gt;githubページに公開するときに少し迷ったので,その点を重点的に。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="https://demskiautio.github.io/demski/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://demskiautio.github.io/demski/1970/01/01/cl8s4he8u000icwtv7uhcfvtd/"/>
    <id>https://demskiautio.github.io/demski/1970/01/01/cl8s4he8u000icwtv7uhcfvtd/</id>
    <published>1969-12-31T15:00:00.000Z</published>
    <updated>2019-05-23T10:06:45.131Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
